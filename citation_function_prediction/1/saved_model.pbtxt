saved_model_schema_version: 1
meta_graphs {
  meta_info_def {
    stripped_op_list {
      op {
        name: "Add"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_STRING
            }
          }
        }
      }
      op {
        name: "AddN"
        input_arg {
          name: "inputs"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "sum"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
              type: DT_VARIANT
            }
          }
        }
        is_aggregate: true
        is_commutative: true
      }
      op {
        name: "AddV2"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
        is_aggregate: true
        is_commutative: true
      }
      op {
        name: "ArgMax"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "dimension"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "output_type"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "output_type"
          type: "type"
          default_value {
            type: DT_INT64
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "AssignAddVariableOp"
        input_arg {
          name: "resource"
          type: DT_RESOURCE
        }
        input_arg {
          name: "value"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        is_stateful: true
      }
      op {
        name: "AssignVariableOp"
        input_arg {
          name: "resource"
          type: DT_RESOURCE
        }
        input_arg {
          name: "value"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        is_stateful: true
      }
      op {
        name: "BiasAdd"
        input_arg {
          name: "value"
          type_attr: "T"
        }
        input_arg {
          name: "bias"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
            }
          }
        }
      }
      op {
        name: "BiasAddGrad"
        input_arg {
          name: "out_backprop"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
            }
          }
        }
      }
      op {
        name: "BroadcastGradientArgs"
        input_arg {
          name: "s0"
          type_attr: "T"
        }
        input_arg {
          name: "s1"
          type_attr: "T"
        }
        output_arg {
          name: "r0"
          type_attr: "T"
        }
        output_arg {
          name: "r1"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Cast"
        input_arg {
          name: "x"
          type_attr: "SrcT"
        }
        output_arg {
          name: "y"
          type_attr: "DstT"
        }
        attr {
          name: "SrcT"
          type: "type"
        }
        attr {
          name: "DstT"
          type: "type"
        }
        attr {
          name: "Truncate"
          type: "bool"
          default_value {
            b: false
          }
        }
      }
      op {
        name: "ConcatOffset"
        input_arg {
          name: "concat_dim"
          type: DT_INT32
        }
        input_arg {
          name: "shape"
          type: DT_INT32
          number_attr: "N"
        }
        output_arg {
          name: "offset"
          type: DT_INT32
          number_attr: "N"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 2
        }
      }
      op {
        name: "ConcatV2"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        input_arg {
          name: "axis"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 2
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Const"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "value"
          type: "tensor"
        }
        attr {
          name: "dtype"
          type: "type"
        }
      }
      op {
        name: "Conv2D"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "filter"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "strides"
          type: "list(int)"
        }
        attr {
          name: "use_cudnn_on_gpu"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "padding"
          type: "string"
          allowed_values {
            list {
              s: "SAME"
              s: "VALID"
              s: "EXPLICIT"
            }
          }
        }
        attr {
          name: "explicit_paddings"
          type: "list(int)"
          default_value {
            list {
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
            }
          }
        }
        attr {
          name: "dilations"
          type: "list(int)"
          default_value {
            list {
              i: 1
              i: 1
              i: 1
              i: 1
            }
          }
        }
      }
      op {
        name: "Conv2DBackpropFilter"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "filter_sizes"
          type: DT_INT32
        }
        input_arg {
          name: "out_backprop"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "strides"
          type: "list(int)"
        }
        attr {
          name: "use_cudnn_on_gpu"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "padding"
          type: "string"
          allowed_values {
            list {
              s: "SAME"
              s: "VALID"
              s: "EXPLICIT"
            }
          }
        }
        attr {
          name: "explicit_paddings"
          type: "list(int)"
          default_value {
            list {
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
            }
          }
        }
        attr {
          name: "dilations"
          type: "list(int)"
          default_value {
            list {
              i: 1
              i: 1
              i: 1
              i: 1
            }
          }
        }
      }
      op {
        name: "Conv2DBackpropInput"
        input_arg {
          name: "input_sizes"
          type: DT_INT32
        }
        input_arg {
          name: "filter"
          type_attr: "T"
        }
        input_arg {
          name: "out_backprop"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "strides"
          type: "list(int)"
        }
        attr {
          name: "use_cudnn_on_gpu"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "padding"
          type: "string"
          allowed_values {
            list {
              s: "SAME"
              s: "VALID"
              s: "EXPLICIT"
            }
          }
        }
        attr {
          name: "explicit_paddings"
          type: "list(int)"
          default_value {
            list {
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
            }
          }
        }
        attr {
          name: "dilations"
          type: "list(int)"
          default_value {
            list {
              i: 1
              i: 1
              i: 1
              i: 1
            }
          }
        }
      }
      op {
        name: "DynamicStitch"
        input_arg {
          name: "indices"
          type: DT_INT32
          number_attr: "N"
        }
        input_arg {
          name: "data"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "merged"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Equal"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_QUINT8
              type: DT_QINT8
              type: DT_QINT32
              type: DT_STRING
              type: DT_BOOL
              type: DT_COMPLEX128
            }
          }
        }
        attr {
          name: "incompatible_shape_error"
          type: "bool"
          default_value {
            b: true
          }
        }
        is_commutative: true
      }
      op {
        name: "ExpandDims"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "dim"
          type_attr: "Tdim"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tdim"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Fill"
        input_arg {
          name: "dims"
          type_attr: "index_type"
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "index_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "FloorDiv"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "FloorMod"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
      }
      op {
        name: "Greater"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "GreaterEqual"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "Identity"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "LessEqual"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "Log"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "MatMul"
        input_arg {
          name: "a"
          type_attr: "T"
        }
        input_arg {
          name: "b"
          type_attr: "T"
        }
        output_arg {
          name: "product"
          type_attr: "T"
        }
        attr {
          name: "transpose_a"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "transpose_b"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Max"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Maximum"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Mean"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "MergeV2Checkpoints"
        input_arg {
          name: "checkpoint_prefixes"
          type: DT_STRING
        }
        input_arg {
          name: "destination_prefix"
          type: DT_STRING
        }
        attr {
          name: "delete_old_dirs"
          type: "bool"
          default_value {
            b: true
          }
        }
        is_stateful: true
      }
      op {
        name: "Minimum"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Mul"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "Neg"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "NoOp"
      }
      op {
        name: "Pack"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "axis"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "Placeholder"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
          default_value {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      op {
        name: "PlaceholderWithDefault"
        input_arg {
          name: "input"
          type_attr: "dtype"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
        }
      }
      op {
        name: "Pow"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_HALF
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Prod"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RandomUniform"
        input_arg {
          name: "shape"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "seed"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "seed2"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "dtype"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        is_stateful: true
      }
      op {
        name: "Range"
        input_arg {
          name: "start"
          type_attr: "Tidx"
        }
        input_arg {
          name: "limit"
          type_attr: "Tidx"
        }
        input_arg {
          name: "delta"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "Tidx"
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ReadVariableOp"
        input_arg {
          name: "resource"
          type: DT_RESOURCE
        }
        output_arg {
          name: "value"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        is_stateful: true
      }
      op {
        name: "RealDiv"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Reciprocal"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Relu"
        input_arg {
          name: "features"
          type_attr: "T"
        }
        output_arg {
          name: "activations"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
              type: DT_QINT8
            }
          }
        }
      }
      op {
        name: "ReluGrad"
        input_arg {
          name: "gradients"
          type_attr: "T"
        }
        input_arg {
          name: "features"
          type_attr: "T"
        }
        output_arg {
          name: "backprops"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "Reshape"
        input_arg {
          name: "tensor"
          type_attr: "T"
        }
        input_arg {
          name: "shape"
          type_attr: "Tshape"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tshape"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ResourceGather"
        input_arg {
          name: "resource"
          type: DT_RESOURCE
        }
        input_arg {
          name: "indices"
          type_attr: "Tindices"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "batch_dims"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "validate_indices"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "Tindices"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        is_stateful: true
      }
      op {
        name: "RestoreV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        output_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "SaveV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        input_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "Select"
        input_arg {
          name: "condition"
          type: DT_BOOL
        }
        input_arg {
          name: "t"
          type_attr: "T"
        }
        input_arg {
          name: "e"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Shape"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ShapeN"
        input_arg {
          name: "input"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
          number_attr: "N"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ShardedFilename"
        input_arg {
          name: "basename"
          type: DT_STRING
        }
        input_arg {
          name: "shard"
          type: DT_INT32
        }
        input_arg {
          name: "num_shards"
          type: DT_INT32
        }
        output_arg {
          name: "filename"
          type: DT_STRING
        }
      }
      op {
        name: "Sigmoid"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "SigmoidGrad"
        input_arg {
          name: "y"
          type_attr: "T"
        }
        input_arg {
          name: "dy"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Size"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Slice"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "size"
          type_attr: "Index"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Sqrt"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Square"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Squeeze"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "squeeze_dims"
          type: "list(int)"
          default_value {
            list {
            }
          }
          has_minimum: true
        }
      }
      op {
        name: "StridedSlice"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "end"
          type_attr: "Index"
        }
        input_arg {
          name: "strides"
          type_attr: "Index"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "begin_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "end_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "ellipsis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "new_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "shrink_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "StringJoin"
        input_arg {
          name: "inputs"
          type: DT_STRING
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type: DT_STRING
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "separator"
          type: "string"
          default_value {
            s: ""
          }
        }
      }
      op {
        name: "Sub"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Sum"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Tile"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "multiples"
          type_attr: "Tmultiples"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tmultiples"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "UnsortedSegmentSum"
        input_arg {
          name: "data"
          type_attr: "T"
        }
        input_arg {
          name: "segment_ids"
          type_attr: "Tindices"
        }
        input_arg {
          name: "num_segments"
          type_attr: "Tnumsegments"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tindices"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "Tnumsegments"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "VarHandleOp"
        output_arg {
          name: "resource"
          type: DT_RESOURCE
        }
        attr {
          name: "container"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "shared_name"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
        }
        is_stateful: true
      }
      op {
        name: "VarIsInitializedOp"
        input_arg {
          name: "resource"
          type: DT_RESOURCE
        }
        output_arg {
          name: "is_initialized"
          type: DT_BOOL
        }
        is_stateful: true
      }
      op {
        name: "ZerosLike"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
    }
    tags: "serve"
    tensorflow_version: "1.15.0"
    tensorflow_git_version: "v1.15.0-rc3-22-g590d6ee"
  }
  graph_def {
    node {
      name: "input_1"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 120
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 120
            }
          }
        }
      }
    }
    node {
      name: "embedding_1/random_uniform/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\202Y\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "embedding_1/random_uniform/min"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.05000000074505806
          }
        }
      }
    }
    node {
      name: "embedding_1/random_uniform/max"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.05000000074505806
          }
        }
      }
    }
    node {
      name: "embedding_1/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "embedding_1/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 22914
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 87654321
        }
      }
      attr {
        key: "seed2"
        value {
          i: 2105981
        }
      }
    }
    node {
      name: "embedding_1/random_uniform/sub"
      op: "Sub"
      input: "embedding_1/random_uniform/max"
      input: "embedding_1/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "embedding_1/random_uniform/mul"
      op: "Mul"
      input: "embedding_1/random_uniform/RandomUniform"
      input: "embedding_1/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 22914
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "embedding_1/random_uniform"
      op: "Add"
      input: "embedding_1/random_uniform/mul"
      input: "embedding_1/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 22914
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "embedding_1/embeddings"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@embedding_1/embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 22914
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "embedding_1/embeddings"
        }
      }
    }
    node {
      name: "embedding_1/embeddings/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "embedding_1/embeddings"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "embedding_1/embeddings/Assign"
      op: "AssignVariableOp"
      input: "embedding_1/embeddings"
      input: "embedding_1/random_uniform"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "embedding_1/embeddings/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "embedding_1/embeddings"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 22914
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "embedding_1/Cast"
      op: "Cast"
      input: "input_1"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 120
              }
            }
          }
        }
      }
    }
    node {
      name: "embedding_1/embedding_lookup"
      op: "ResourceGather"
      input: "embedding_1/embeddings"
      input: "embedding_1/Cast"
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@embedding_1/embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 120
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "batch_dims"
        value {
          i: 0
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "validate_indices"
        value {
          b: true
        }
      }
    }
    node {
      name: "embedding_1/embedding_lookup/Identity"
      op: "Identity"
      input: "embedding_1/embedding_lookup"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@embedding_1/embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 120
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "embedding_1/embedding_lookup/Identity_1"
      op: "Identity"
      input: "embedding_1/embedding_lookup/Identity"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 120
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_1/random_uniform/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\003\000\000\000\200\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "conv1d_1/random_uniform/min"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.10206207633018494
          }
        }
      }
    }
    node {
      name: "conv1d_1/random_uniform/max"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.10206207633018494
          }
        }
      }
    }
    node {
      name: "conv1d_1/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "conv1d_1/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 87654321
        }
      }
      attr {
        key: "seed2"
        value {
          i: 4596181
        }
      }
    }
    node {
      name: "conv1d_1/random_uniform/sub"
      op: "Sub"
      input: "conv1d_1/random_uniform/max"
      input: "conv1d_1/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv1d_1/random_uniform/mul"
      op: "Mul"
      input: "conv1d_1/random_uniform/RandomUniform"
      input: "conv1d_1/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_1/random_uniform"
      op: "Add"
      input: "conv1d_1/random_uniform/mul"
      input: "conv1d_1/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_1/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 128
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "conv1d_1/kernel"
        }
      }
    }
    node {
      name: "conv1d_1/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "conv1d_1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv1d_1/kernel/Assign"
      op: "AssignVariableOp"
      input: "conv1d_1/kernel"
      input: "conv1d_1/random_uniform"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv1d_1/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv1d_1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv1d_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "conv1d_1/bias"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "conv1d_1/bias"
        }
      }
    }
    node {
      name: "conv1d_1/bias/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "conv1d_1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv1d_1/bias/Assign"
      op: "AssignVariableOp"
      input: "conv1d_1/bias"
      input: "conv1d_1/Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv1d_1/bias/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv1d_1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv1d_1/convolution/ExpandDims/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "conv1d_1/convolution/ExpandDims"
      op: "ExpandDims"
      input: "embedding_1/embedding_lookup/Identity_1"
      input: "conv1d_1/convolution/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 120
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_1/convolution/ExpandDims_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv1d_1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv1d_1/convolution/ExpandDims_1/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "conv1d_1/convolution/ExpandDims_1"
      op: "ExpandDims"
      input: "conv1d_1/convolution/ExpandDims_1/ReadVariableOp"
      input: "conv1d_1/convolution/ExpandDims_1/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_1/convolution"
      op: "Conv2D"
      input: "conv1d_1/convolution/ExpandDims"
      input: "conv1d_1/convolution/ExpandDims_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 118
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "conv1d_1/convolution/Squeeze"
      op: "Squeeze"
      input: "conv1d_1/convolution"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 118
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
            i: 1
          }
        }
      }
    }
    node {
      name: "conv1d_1/Reshape/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv1d_1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv1d_1/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "conv1d_1/Reshape"
      op: "Reshape"
      input: "conv1d_1/Reshape/ReadVariableOp"
      input: "conv1d_1/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_1/add"
      op: "AddV2"
      input: "conv1d_1/convolution/Squeeze"
      input: "conv1d_1/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 118
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_1/Relu"
      op: "Relu"
      input: "conv1d_1/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 118
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "global_max_pooling1d_1/Max/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "global_max_pooling1d_1/Max"
      op: "Max"
      input: "conv1d_1/Relu"
      input: "global_max_pooling1d_1/Max/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "conv1d_2/random_uniform/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\004\000\000\000\200\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "conv1d_2/random_uniform/min"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.0883883461356163
          }
        }
      }
    }
    node {
      name: "conv1d_2/random_uniform/max"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0883883461356163
          }
        }
      }
    }
    node {
      name: "conv1d_2/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "conv1d_2/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 87654321
        }
      }
      attr {
        key: "seed2"
        value {
          i: 3540029
        }
      }
    }
    node {
      name: "conv1d_2/random_uniform/sub"
      op: "Sub"
      input: "conv1d_2/random_uniform/max"
      input: "conv1d_2/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv1d_2/random_uniform/mul"
      op: "Mul"
      input: "conv1d_2/random_uniform/RandomUniform"
      input: "conv1d_2/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_2/random_uniform"
      op: "Add"
      input: "conv1d_2/random_uniform/mul"
      input: "conv1d_2/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_2/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 4
            }
            dim {
              size: 128
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "conv1d_2/kernel"
        }
      }
    }
    node {
      name: "conv1d_2/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "conv1d_2/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv1d_2/kernel/Assign"
      op: "AssignVariableOp"
      input: "conv1d_2/kernel"
      input: "conv1d_2/random_uniform"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv1d_2/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv1d_2/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv1d_2/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "conv1d_2/bias"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "conv1d_2/bias"
        }
      }
    }
    node {
      name: "conv1d_2/bias/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "conv1d_2/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv1d_2/bias/Assign"
      op: "AssignVariableOp"
      input: "conv1d_2/bias"
      input: "conv1d_2/Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv1d_2/bias/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv1d_2/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv1d_2/convolution/ExpandDims/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "conv1d_2/convolution/ExpandDims"
      op: "ExpandDims"
      input: "embedding_1/embedding_lookup/Identity_1"
      input: "conv1d_2/convolution/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 120
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_2/convolution/ExpandDims_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv1d_2/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv1d_2/convolution/ExpandDims_1/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "conv1d_2/convolution/ExpandDims_1"
      op: "ExpandDims"
      input: "conv1d_2/convolution/ExpandDims_1/ReadVariableOp"
      input: "conv1d_2/convolution/ExpandDims_1/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 4
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_2/convolution"
      op: "Conv2D"
      input: "conv1d_2/convolution/ExpandDims"
      input: "conv1d_2/convolution/ExpandDims_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 117
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "conv1d_2/convolution/Squeeze"
      op: "Squeeze"
      input: "conv1d_2/convolution"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 117
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
            i: 1
          }
        }
      }
    }
    node {
      name: "conv1d_2/Reshape/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv1d_2/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv1d_2/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "conv1d_2/Reshape"
      op: "Reshape"
      input: "conv1d_2/Reshape/ReadVariableOp"
      input: "conv1d_2/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_2/add"
      op: "AddV2"
      input: "conv1d_2/convolution/Squeeze"
      input: "conv1d_2/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 117
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_2/Relu"
      op: "Relu"
      input: "conv1d_2/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 117
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "global_max_pooling1d_2/Max/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "global_max_pooling1d_2/Max"
      op: "Max"
      input: "conv1d_2/Relu"
      input: "global_max_pooling1d_2/Max/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "conv1d_3/random_uniform/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\005\000\000\000\200\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "conv1d_3/random_uniform/min"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.07905694097280502
          }
        }
      }
    }
    node {
      name: "conv1d_3/random_uniform/max"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.07905694097280502
          }
        }
      }
    }
    node {
      name: "conv1d_3/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "conv1d_3/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 87654321
        }
      }
      attr {
        key: "seed2"
        value {
          i: 4261197
        }
      }
    }
    node {
      name: "conv1d_3/random_uniform/sub"
      op: "Sub"
      input: "conv1d_3/random_uniform/max"
      input: "conv1d_3/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv1d_3/random_uniform/mul"
      op: "Mul"
      input: "conv1d_3/random_uniform/RandomUniform"
      input: "conv1d_3/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_3/random_uniform"
      op: "Add"
      input: "conv1d_3/random_uniform/mul"
      input: "conv1d_3/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_3/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_3/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 5
            }
            dim {
              size: 128
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "conv1d_3/kernel"
        }
      }
    }
    node {
      name: "conv1d_3/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "conv1d_3/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv1d_3/kernel/Assign"
      op: "AssignVariableOp"
      input: "conv1d_3/kernel"
      input: "conv1d_3/random_uniform"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv1d_3/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv1d_3/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv1d_3/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "conv1d_3/bias"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_3/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "conv1d_3/bias"
        }
      }
    }
    node {
      name: "conv1d_3/bias/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "conv1d_3/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv1d_3/bias/Assign"
      op: "AssignVariableOp"
      input: "conv1d_3/bias"
      input: "conv1d_3/Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv1d_3/bias/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv1d_3/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv1d_3/convolution/ExpandDims/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "conv1d_3/convolution/ExpandDims"
      op: "ExpandDims"
      input: "embedding_1/embedding_lookup/Identity_1"
      input: "conv1d_3/convolution/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 120
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_3/convolution/ExpandDims_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv1d_3/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv1d_3/convolution/ExpandDims_1/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "conv1d_3/convolution/ExpandDims_1"
      op: "ExpandDims"
      input: "conv1d_3/convolution/ExpandDims_1/ReadVariableOp"
      input: "conv1d_3/convolution/ExpandDims_1/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 5
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_3/convolution"
      op: "Conv2D"
      input: "conv1d_3/convolution/ExpandDims"
      input: "conv1d_3/convolution/ExpandDims_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 116
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "conv1d_3/convolution/Squeeze"
      op: "Squeeze"
      input: "conv1d_3/convolution"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 116
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
            i: 1
          }
        }
      }
    }
    node {
      name: "conv1d_3/Reshape/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv1d_3/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv1d_3/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "conv1d_3/Reshape"
      op: "Reshape"
      input: "conv1d_3/Reshape/ReadVariableOp"
      input: "conv1d_3/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_3/add"
      op: "AddV2"
      input: "conv1d_3/convolution/Squeeze"
      input: "conv1d_3/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 116
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_3/Relu"
      op: "Relu"
      input: "conv1d_3/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 116
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "global_max_pooling1d_3/Max/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "global_max_pooling1d_3/Max"
      op: "Max"
      input: "conv1d_3/Relu"
      input: "global_max_pooling1d_3/Max/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "conv1d_4/random_uniform/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\006\000\000\000\200\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "conv1d_4/random_uniform/min"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.07216878235340118
          }
        }
      }
    }
    node {
      name: "conv1d_4/random_uniform/max"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.07216878235340118
          }
        }
      }
    }
    node {
      name: "conv1d_4/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "conv1d_4/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 87654321
        }
      }
      attr {
        key: "seed2"
        value {
          i: 9722139
        }
      }
    }
    node {
      name: "conv1d_4/random_uniform/sub"
      op: "Sub"
      input: "conv1d_4/random_uniform/max"
      input: "conv1d_4/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv1d_4/random_uniform/mul"
      op: "Mul"
      input: "conv1d_4/random_uniform/RandomUniform"
      input: "conv1d_4/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_4/random_uniform"
      op: "Add"
      input: "conv1d_4/random_uniform/mul"
      input: "conv1d_4/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_4/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_4/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 6
            }
            dim {
              size: 128
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "conv1d_4/kernel"
        }
      }
    }
    node {
      name: "conv1d_4/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "conv1d_4/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv1d_4/kernel/Assign"
      op: "AssignVariableOp"
      input: "conv1d_4/kernel"
      input: "conv1d_4/random_uniform"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv1d_4/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv1d_4/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv1d_4/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "conv1d_4/bias"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_4/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "conv1d_4/bias"
        }
      }
    }
    node {
      name: "conv1d_4/bias/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "conv1d_4/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv1d_4/bias/Assign"
      op: "AssignVariableOp"
      input: "conv1d_4/bias"
      input: "conv1d_4/Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv1d_4/bias/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv1d_4/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv1d_4/convolution/ExpandDims/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "conv1d_4/convolution/ExpandDims"
      op: "ExpandDims"
      input: "embedding_1/embedding_lookup/Identity_1"
      input: "conv1d_4/convolution/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 120
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_4/convolution/ExpandDims_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv1d_4/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv1d_4/convolution/ExpandDims_1/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "conv1d_4/convolution/ExpandDims_1"
      op: "ExpandDims"
      input: "conv1d_4/convolution/ExpandDims_1/ReadVariableOp"
      input: "conv1d_4/convolution/ExpandDims_1/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 6
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_4/convolution"
      op: "Conv2D"
      input: "conv1d_4/convolution/ExpandDims"
      input: "conv1d_4/convolution/ExpandDims_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 115
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "conv1d_4/convolution/Squeeze"
      op: "Squeeze"
      input: "conv1d_4/convolution"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 115
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
            i: 1
          }
        }
      }
    }
    node {
      name: "conv1d_4/Reshape/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv1d_4/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv1d_4/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "conv1d_4/Reshape"
      op: "Reshape"
      input: "conv1d_4/Reshape/ReadVariableOp"
      input: "conv1d_4/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_4/add"
      op: "AddV2"
      input: "conv1d_4/convolution/Squeeze"
      input: "conv1d_4/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 115
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1d_4/Relu"
      op: "Relu"
      input: "conv1d_4/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 115
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "global_max_pooling1d_4/Max/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "global_max_pooling1d_4/Max"
      op: "Max"
      input: "conv1d_4/Relu"
      input: "global_max_pooling1d_4/Max/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "concatenate_1/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "concatenate_1/concat"
      op: "ConcatV2"
      input: "global_max_pooling1d_1/Max"
      input: "global_max_pooling1d_2/Max"
      input: "global_max_pooling1d_3/Max"
      input: "global_max_pooling1d_4/Max"
      input: "concatenate_1/concat/axis"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "dense_1/random_uniform/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\001\000\000\006\000\000\000"
          }
        }
      }
    }
    node {
      name: "dense_1/random_uniform/min"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.15132997930049896
          }
        }
      }
    }
    node {
      name: "dense_1/random_uniform/max"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.15132997930049896
          }
        }
      }
    }
    node {
      name: "dense_1/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "dense_1/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 87654321
        }
      }
      attr {
        key: "seed2"
        value {
          i: 5025333
        }
      }
    }
    node {
      name: "dense_1/random_uniform/sub"
      op: "Sub"
      input: "dense_1/random_uniform/max"
      input: "dense_1/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "dense_1/random_uniform/mul"
      op: "Mul"
      input: "dense_1/random_uniform/RandomUniform"
      input: "dense_1/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "dense_1/random_uniform"
      op: "Add"
      input: "dense_1/random_uniform/mul"
      input: "dense_1/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "dense_1/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 256
            }
            dim {
              size: 6
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "dense_1/kernel"
        }
      }
    }
    node {
      name: "dense_1/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "dense_1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "dense_1/kernel/Assign"
      op: "AssignVariableOp"
      input: "dense_1/kernel"
      input: "dense_1/random_uniform"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dense_1/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dense_1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dense_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 6
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "dense_1/bias"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 6
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "dense_1/bias"
        }
      }
    }
    node {
      name: "dense_1/bias/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "dense_1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "dense_1/bias/Assign"
      op: "AssignVariableOp"
      input: "dense_1/bias"
      input: "dense_1/Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dense_1/bias/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dense_1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dense_1/MatMul/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dense_1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dense_1/MatMul"
      op: "MatMul"
      input: "concatenate_1/concat"
      input: "dense_1/MatMul/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "dense_1/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dense_1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dense_1/BiasAdd"
      op: "BiasAdd"
      input: "dense_1/MatMul"
      input: "dense_1/BiasAdd/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "dense_1/Sigmoid"
      op: "Sigmoid"
      input: "dense_1/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam/iterations/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adam/iterations"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node {
      name: "Adam/iterations"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adam/iterations"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "Adam/iterations"
        }
      }
    }
    node {
      name: "Adam/iterations/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "Adam/iterations"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adam/iterations/Assign"
      op: "AssignVariableOp"
      input: "Adam/iterations"
      input: "Adam/iterations/Initializer/initial_value"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
    }
    node {
      name: "Adam/iterations/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adam/iterations"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
    }
    node {
      name: "Adam/learning_rate/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adam/learning_rate"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0010000000474974513
          }
        }
      }
    }
    node {
      name: "Adam/learning_rate"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adam/learning_rate"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "Adam/learning_rate"
        }
      }
    }
    node {
      name: "Adam/learning_rate/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "Adam/learning_rate"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adam/learning_rate/Assign"
      op: "AssignVariableOp"
      input: "Adam/learning_rate"
      input: "Adam/learning_rate/Initializer/initial_value"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adam/learning_rate/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adam/learning_rate"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adam/beta_1/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adam/beta_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.8999999761581421
          }
        }
      }
    }
    node {
      name: "Adam/beta_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adam/beta_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "Adam/beta_1"
        }
      }
    }
    node {
      name: "Adam/beta_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "Adam/beta_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adam/beta_1/Assign"
      op: "AssignVariableOp"
      input: "Adam/beta_1"
      input: "Adam/beta_1/Initializer/initial_value"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adam/beta_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adam/beta_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adam/beta_2/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adam/beta_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9990000128746033
          }
        }
      }
    }
    node {
      name: "Adam/beta_2"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adam/beta_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "Adam/beta_2"
        }
      }
    }
    node {
      name: "Adam/beta_2/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "Adam/beta_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adam/beta_2/Assign"
      op: "AssignVariableOp"
      input: "Adam/beta_2"
      input: "Adam/beta_2/Initializer/initial_value"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adam/beta_2/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adam/beta_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adam/decay/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adam/decay"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Adam/decay"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adam/decay"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "Adam/decay"
        }
      }
    }
    node {
      name: "Adam/decay/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "Adam/decay"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adam/decay/Assign"
      op: "AssignVariableOp"
      input: "Adam/decay"
      input: "Adam/decay/Initializer/initial_value"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adam/decay/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adam/decay"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dense_1_target"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "dense_1_sample_weights"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "total"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@total"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "total"
        }
      }
    }
    node {
      name: "total/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "total"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "total/Assign"
      op: "AssignVariableOp"
      input: "total"
      input: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "total/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "total"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "count"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@count"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "count"
        }
      }
    }
    node {
      name: "count/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "count"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "count/Assign"
      op: "AssignVariableOp"
      input: "count"
      input: "Const_1"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "count/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "count"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "metrics/accuracy/ArgMax/dimension"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "metrics/accuracy/ArgMax"
      op: "ArgMax"
      input: "dense_1_target"
      input: "metrics/accuracy/ArgMax/dimension"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_type"
        value {
          type: DT_INT64
        }
      }
    }
    node {
      name: "metrics/accuracy/ArgMax_1/dimension"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "metrics/accuracy/ArgMax_1"
      op: "ArgMax"
      input: "dense_1/Sigmoid"
      input: "metrics/accuracy/ArgMax_1/dimension"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_type"
        value {
          type: DT_INT64
        }
      }
    }
    node {
      name: "metrics/accuracy/Equal"
      op: "Equal"
      input: "metrics/accuracy/ArgMax"
      input: "metrics/accuracy/ArgMax_1"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node {
      name: "metrics/accuracy/Cast"
      op: "Cast"
      input: "metrics/accuracy/Equal"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "metrics/accuracy/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "metrics/accuracy/Sum"
      op: "Sum"
      input: "metrics/accuracy/Cast"
      input: "metrics/accuracy/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "metrics/accuracy/AssignAddVariableOp"
      op: "AssignAddVariableOp"
      input: "total"
      input: "metrics/accuracy/Sum"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "metrics/accuracy/ReadVariableOp"
      op: "ReadVariableOp"
      input: "total"
      input: "^metrics/accuracy/AssignAddVariableOp"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "metrics/accuracy/Size"
      op: "Size"
      input: "metrics/accuracy/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "metrics/accuracy/Cast_1"
      op: "Cast"
      input: "metrics/accuracy/Size"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "metrics/accuracy/AssignAddVariableOp_1"
      op: "AssignAddVariableOp"
      input: "count"
      input: "metrics/accuracy/Cast_1"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "metrics/accuracy/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "count"
      input: "^metrics/accuracy/AssignAddVariableOp_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "metrics/accuracy/ReadVariableOp_2"
      op: "ReadVariableOp"
      input: "total"
      input: "^metrics/accuracy/AssignAddVariableOp"
      input: "^metrics/accuracy/AssignAddVariableOp_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "metrics/accuracy/truediv/ReadVariableOp"
      op: "ReadVariableOp"
      input: "count"
      input: "^metrics/accuracy/AssignAddVariableOp"
      input: "^metrics/accuracy/AssignAddVariableOp_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "metrics/accuracy/truediv"
      op: "RealDiv"
      input: "metrics/accuracy/ReadVariableOp_2"
      input: "metrics/accuracy/truediv/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "metrics/accuracy/Identity"
      op: "Identity"
      input: "metrics/accuracy/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_1_loss/categorical_focal_loss_fixed/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/dense_1_loss/categorical_focal_loss_fixed/Sum"
      op: "Sum"
      input: "dense_1/Sigmoid"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/dense_1_loss/categorical_focal_loss_fixed/truediv"
      op: "RealDiv"
      input: "dense_1/Sigmoid"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9999998807907104
          }
        }
      }
    }
    node {
      name: "loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum"
      op: "Minimum"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/truediv"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value"
      op: "Maximum"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_1_loss/categorical_focal_loss_fixed/Neg"
      op: "Neg"
      input: "dense_1_target"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_1_loss/categorical_focal_loss_fixed/Log"
      op: "Log"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_1_loss/categorical_focal_loss_fixed/mul"
      op: "Mul"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/Neg"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/Log"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_1_loss/categorical_focal_loss_fixed/sub/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "loss/dense_1_loss/categorical_focal_loss_fixed/sub"
      op: "Sub"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/sub/x"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_1_loss/categorical_focal_loss_fixed/Pow/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node {
      name: "loss/dense_1_loss/categorical_focal_loss_fixed/Pow"
      op: "Pow"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/sub"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/Pow/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_1_loss/categorical_focal_loss_fixed/mul_1/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.25
          }
        }
      }
    }
    node {
      name: "loss/dense_1_loss/categorical_focal_loss_fixed/mul_1"
      op: "Mul"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/mul_1/x"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/Pow"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_1_loss/categorical_focal_loss_fixed/mul_2"
      op: "Mul"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/mul_1"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_1_loss/categorical_focal_loss_fixed/Mean/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "loss/dense_1_loss/categorical_focal_loss_fixed/Mean"
      op: "Mean"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/mul_2"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/Mean/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/mul"
      op: "Mul"
      input: "dense_1_sample_weights"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/Sum"
      op: "Sum"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/mul"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/num_elements/Size"
      op: "Size"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/num_elements/Cast"
      op: "Cast"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/num_elements/Size"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv"
      op: "RealDiv"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/Sum"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/num_elements/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/mul/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "loss/mul"
      op: "Mul"
      input: "loss/mul/x"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Const_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "Mean"
      op: "Mean"
      input: "loss/mul"
      input: "Const_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/Shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/grad_ys_0"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/Fill"
      op: "Fill"
      input: "training/Adam/gradients/Shape"
      input: "training/Adam/gradients/grad_ys_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/Mean_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/Mean_grad/Reshape"
      op: "Reshape"
      input: "training/Adam/gradients/Fill"
      input: "training/Adam/gradients/Mean_grad/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/Mean_grad/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/Mean_grad/Tile"
      op: "Tile"
      input: "training/Adam/gradients/Mean_grad/Reshape"
      input: "training/Adam/gradients/Mean_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/Mean_grad/Const_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/Mean_grad/truediv"
      op: "RealDiv"
      input: "training/Adam/gradients/Mean_grad/Tile"
      input: "training/Adam/gradients/Mean_grad/Const_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/mul_grad/Mul"
      op: "Mul"
      input: "training/Adam/gradients/Mean_grad/truediv"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/mul_grad/Mul_1"
      op: "Mul"
      input: "training/Adam/gradients/Mean_grad/truediv"
      input: "loss/mul/x"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv_grad/Shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv_grad/Shape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv_grad/RealDiv"
      op: "RealDiv"
      input: "training/Adam/gradients/loss/mul_grad/Mul_1"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/num_elements/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv_grad/Sum"
      op: "Sum"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv_grad/RealDiv"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv_grad/Reshape"
      op: "Reshape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv_grad/Sum"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv_grad/Neg"
      op: "Neg"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv_grad/RealDiv_1"
      op: "RealDiv"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv_grad/Neg"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/num_elements/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv_grad/RealDiv_2"
      op: "RealDiv"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv_grad/RealDiv_1"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/num_elements/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv_grad/mul"
      op: "Mul"
      input: "training/Adam/gradients/loss/mul_grad/Mul_1"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv_grad/RealDiv_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv_grad/Sum_1"
      op: "Sum"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv_grad/mul"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv_grad/Reshape_1"
      op: "Reshape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv_grad/Sum_1"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/Sum_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/Sum_grad/Reshape"
      op: "Reshape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/truediv_grad/Reshape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/Sum_grad/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/Sum_grad/Shape"
      op: "Shape"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/Sum_grad/Tile"
      op: "Tile"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/Sum_grad/Reshape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/Sum_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/mul_grad/Shape"
      op: "Shape"
      input: "dense_1_sample_weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/mul_grad/Shape_1"
      op: "Shape"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/mul_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/mul_grad/Shape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/mul_grad/Mul"
      op: "Mul"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/Sum_grad/Tile"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/mul_grad/Sum"
      op: "Sum"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/mul_grad/Mul"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/mul_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/mul_grad/Reshape"
      op: "Reshape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/mul_grad/Sum"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/mul_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/mul_grad/Mul_1"
      op: "Mul"
      input: "dense_1_sample_weights"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/Sum_grad/Tile"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/mul_grad/Sum_1"
      op: "Sum"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/mul_grad/Mul_1"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/mul_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/mul_grad/Reshape_1"
      op: "Reshape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/mul_grad/Sum_1"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Shape"
      op: "Shape"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Size"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/add"
      op: "AddV2"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/Mean/reduction_indices"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/mod"
      op: "FloorMod"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/add"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/range/start"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/range/delta"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/range"
      op: "Range"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/range/start"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Size"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Fill/value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Fill"
      op: "Fill"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Shape_1"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/range"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/mod"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Shape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Maximum"
      op: "Maximum"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/DynamicStitch"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/floordiv"
      op: "FloorDiv"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Shape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Reshape"
      op: "Reshape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/weighted_loss/mul_grad/Reshape_1"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Tile"
      op: "Tile"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Reshape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/floordiv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Shape_2"
      op: "Shape"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Shape_3"
      op: "Shape"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Prod"
      op: "Prod"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Shape_2"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Const_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Prod_1"
      op: "Prod"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Shape_3"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Maximum_1/y"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Maximum_1"
      op: "Maximum"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Prod_1"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Maximum_1/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/floordiv_1"
      op: "FloorDiv"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Prod"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Maximum_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Cast"
      op: "Cast"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/floordiv_1"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/truediv"
      op: "RealDiv"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Tile"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_2_grad/Shape"
      op: "Shape"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/mul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/mul_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_2_grad/Shape_1"
      op: "Shape"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/mul_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_2_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_2_grad/Shape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_2_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/mul_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_2_grad/Mul"
      op: "Mul"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/truediv"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/mul_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_2_grad/Sum"
      op: "Sum"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_2_grad/Mul"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_2_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/mul_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_2_grad/Reshape"
      op: "Reshape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_2_grad/Sum"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_2_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/mul_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_2_grad/Mul_1"
      op: "Mul"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/mul_1"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Mean_grad/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/mul_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_2_grad/Sum_1"
      op: "Sum"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_2_grad/Mul_1"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_2_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/mul_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_2_grad/Reshape_1"
      op: "Reshape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_2_grad/Sum_1"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_2_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/mul_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_1_grad/Shape"
      op: "Shape"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/mul_1/x"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/mul_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_1_grad/Shape_1"
      op: "Shape"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/Pow"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/mul_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_1_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_1_grad/Shape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_1_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/mul_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_1_grad/Mul"
      op: "Mul"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_2_grad/Reshape"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/Pow"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/mul_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_1_grad/Sum"
      op: "Sum"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_1_grad/Mul"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_1_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/mul_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_1_grad/Reshape"
      op: "Reshape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_1_grad/Sum"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_1_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/mul_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_1_grad/Mul_1"
      op: "Mul"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/mul_1/x"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_2_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/mul_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_1_grad/Sum_1"
      op: "Sum"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_1_grad/Mul_1"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_1_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/mul_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_1_grad/Reshape_1"
      op: "Reshape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_1_grad/Sum_1"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_1_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/mul_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_grad/Shape"
      op: "Shape"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/Neg"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_grad/Shape_1"
      op: "Shape"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/Log"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_grad/Shape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_grad/Mul"
      op: "Mul"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_2_grad/Reshape_1"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/Log"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_grad/Sum"
      op: "Sum"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_grad/Mul"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_grad/Reshape"
      op: "Reshape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_grad/Sum"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_grad/Mul_1"
      op: "Mul"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/Neg"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_2_grad/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_grad/Sum_1"
      op: "Sum"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_grad/Mul_1"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_grad/Reshape_1"
      op: "Reshape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_grad/Sum_1"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/Shape"
      op: "Shape"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Pow"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/Shape_1"
      op: "Shape"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/Pow/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Pow"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/Shape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Pow"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/mul"
      op: "Mul"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_1_grad/Reshape_1"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/Pow/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Pow"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/sub/y"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Pow"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/sub"
      op: "Sub"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/Pow/y"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/sub/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Pow"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/Pow"
      op: "Pow"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/sub"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Pow"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/mul_1"
      op: "Mul"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/mul"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/Pow"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Pow"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/Sum"
      op: "Sum"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/mul_1"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Pow"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/Reshape"
      op: "Reshape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/Sum"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Pow"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/Greater/y"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Pow"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/Greater"
      op: "Greater"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/sub"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/Greater/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Pow"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/ones_like/Shape"
      op: "Shape"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Pow"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/ones_like/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Pow"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/ones_like"
      op: "Fill"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/ones_like/Shape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/ones_like/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Pow"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/Select"
      op: "Select"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/Greater"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/sub"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/ones_like"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Pow"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/Log"
      op: "Log"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/Select"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Pow"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/zeros_like"
      op: "ZerosLike"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Pow"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/Select_1"
      op: "Select"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/Greater"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/Log"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/zeros_like"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Pow"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/mul_2"
      op: "Mul"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_1_grad/Reshape_1"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/Pow"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Pow"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/mul_3"
      op: "Mul"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/mul_2"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/Select_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Pow"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/Sum_1"
      op: "Sum"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/mul_3"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Pow"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/Reshape_1"
      op: "Reshape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/Sum_1"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Pow"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Log_grad/Reciprocal"
      op: "Reciprocal"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value"
      input: "^training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_grad/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Log"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Log_grad/mul"
      op: "Mul"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/mul_grad/Reshape_1"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Log_grad/Reciprocal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Log"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/sub_grad/Shape"
      op: "Shape"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/sub/x"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/sub"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/sub_grad/Shape_1"
      op: "Shape"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/sub"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/sub_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/sub_grad/Shape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/sub_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/sub"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/sub_grad/Sum"
      op: "Sum"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/Reshape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/sub_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/sub"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/sub_grad/Reshape"
      op: "Reshape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/sub_grad/Sum"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/sub_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/sub"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/sub_grad/Neg"
      op: "Neg"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Pow_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/sub"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/sub_grad/Sum_1"
      op: "Sum"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/sub_grad/Neg"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/sub_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/sub"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/sub_grad/Reshape_1"
      op: "Reshape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/sub_grad/Sum_1"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/sub_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/sub"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/AddN"
      op: "AddN"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Log_grad/mul"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/sub_grad/Reshape_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Log"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value_grad/Shape"
      op: "Shape"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value_grad/Shape_2"
      op: "Shape"
      input: "training/Adam/gradients/AddN"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value_grad/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value_grad/zeros"
      op: "Fill"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value_grad/Shape_2"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value_grad/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value_grad/GreaterEqual"
      op: "GreaterEqual"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value_grad/Shape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value_grad/Select"
      op: "Select"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value_grad/GreaterEqual"
      input: "training/Adam/gradients/AddN"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value_grad/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value_grad/Sum"
      op: "Sum"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value_grad/Select"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value_grad/Reshape"
      op: "Reshape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value_grad/Sum"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value_grad/Select_1"
      op: "Select"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value_grad/GreaterEqual"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value_grad/zeros"
      input: "training/Adam/gradients/AddN"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value_grad/Sum_1"
      op: "Sum"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value_grad/Select_1"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value_grad/Reshape_1"
      op: "Reshape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value_grad/Sum_1"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum_grad/Shape"
      op: "Shape"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum_grad/Shape_2"
      op: "Shape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum_grad/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum_grad/zeros"
      op: "Fill"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum_grad/Shape_2"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum_grad/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum_grad/LessEqual"
      op: "LessEqual"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/truediv"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum_grad/Shape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum_grad/Select"
      op: "Select"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum_grad/LessEqual"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value_grad/Reshape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum_grad/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum_grad/Sum"
      op: "Sum"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum_grad/Select"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum_grad/Reshape"
      op: "Reshape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum_grad/Sum"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum_grad/Select_1"
      op: "Select"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum_grad/LessEqual"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum_grad/zeros"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum_grad/Sum_1"
      op: "Sum"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum_grad/Select_1"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum_grad/Reshape_1"
      op: "Reshape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum_grad/Sum_1"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/truediv_grad/Shape"
      op: "Shape"
      input: "dense_1/Sigmoid"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/truediv_grad/Shape_1"
      op: "Shape"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/truediv_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/truediv_grad/Shape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/truediv_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/truediv_grad/RealDiv"
      op: "RealDiv"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum_grad/Reshape"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/truediv_grad/Sum"
      op: "Sum"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/truediv_grad/RealDiv"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/truediv_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/truediv_grad/Reshape"
      op: "Reshape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/truediv_grad/Sum"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/truediv_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/truediv_grad/Neg"
      op: "Neg"
      input: "dense_1/Sigmoid"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/truediv_grad/RealDiv_1"
      op: "RealDiv"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/truediv_grad/Neg"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/truediv_grad/RealDiv_2"
      op: "RealDiv"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/truediv_grad/RealDiv_1"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/truediv_grad/mul"
      op: "Mul"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/clip_by_value/Minimum_grad/Reshape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/truediv_grad/RealDiv_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/truediv_grad/Sum_1"
      op: "Sum"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/truediv_grad/mul"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/truediv_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/truediv_grad/Reshape_1"
      op: "Reshape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/truediv_grad/Sum_1"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/truediv_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/Shape"
      op: "Shape"
      input: "dense_1/Sigmoid"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/Size"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/add"
      op: "AddV2"
      input: "loss/dense_1_loss/categorical_focal_loss_fixed/Sum/reduction_indices"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/mod"
      op: "FloorMod"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/add"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/range/start"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/range/delta"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/range"
      op: "Range"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/range/start"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/Size"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/Fill/value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/Fill"
      op: "Fill"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/Shape_1"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/range"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/mod"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/Shape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/Maximum"
      op: "Maximum"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/DynamicStitch"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/floordiv"
      op: "FloorDiv"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/Shape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/Reshape"
      op: "Reshape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/truediv_grad/Reshape_1"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/Tile"
      op: "Tile"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/Reshape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/floordiv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/AddN_1"
      op: "AddN"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/truediv_grad/Reshape"
      input: "training/Adam/gradients/loss/dense_1_loss/categorical_focal_loss_fixed/Sum_grad/Tile"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_1_loss/categorical_focal_loss_fixed/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/dense_1/Sigmoid_grad/SigmoidGrad"
      op: "SigmoidGrad"
      input: "dense_1/Sigmoid"
      input: "training/Adam/gradients/AddN_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/Sigmoid"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/dense_1/BiasAdd_grad/BiasAddGrad"
      op: "BiasAddGrad"
      input: "training/Adam/gradients/dense_1/Sigmoid_grad/SigmoidGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/BiasAdd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "training/Adam/gradients/dense_1/MatMul_grad/MatMul"
      op: "MatMul"
      input: "training/Adam/gradients/dense_1/Sigmoid_grad/SigmoidGrad"
      input: "dense_1/MatMul/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/MatMul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "training/Adam/gradients/dense_1/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "concatenate_1/concat"
      input: "training/Adam/gradients/dense_1/Sigmoid_grad/SigmoidGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense_1/MatMul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/concatenate_1/concat_grad/Rank"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concatenate_1/concat"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/concatenate_1/concat_grad/mod"
      op: "FloorMod"
      input: "concatenate_1/concat/axis"
      input: "training/Adam/gradients/concatenate_1/concat_grad/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concatenate_1/concat"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/concatenate_1/concat_grad/Shape"
      op: "Shape"
      input: "global_max_pooling1d_1/Max"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concatenate_1/concat"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/concatenate_1/concat_grad/ShapeN"
      op: "ShapeN"
      input: "global_max_pooling1d_1/Max"
      input: "global_max_pooling1d_2/Max"
      input: "global_max_pooling1d_3/Max"
      input: "global_max_pooling1d_4/Max"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concatenate_1/concat"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/concatenate_1/concat_grad/ConcatOffset"
      op: "ConcatOffset"
      input: "training/Adam/gradients/concatenate_1/concat_grad/mod"
      input: "training/Adam/gradients/concatenate_1/concat_grad/ShapeN"
      input: "training/Adam/gradients/concatenate_1/concat_grad/ShapeN:1"
      input: "training/Adam/gradients/concatenate_1/concat_grad/ShapeN:2"
      input: "training/Adam/gradients/concatenate_1/concat_grad/ShapeN:3"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concatenate_1/concat"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/concatenate_1/concat_grad/Slice"
      op: "Slice"
      input: "training/Adam/gradients/dense_1/MatMul_grad/MatMul"
      input: "training/Adam/gradients/concatenate_1/concat_grad/ConcatOffset"
      input: "training/Adam/gradients/concatenate_1/concat_grad/ShapeN"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concatenate_1/concat"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/concatenate_1/concat_grad/Slice_1"
      op: "Slice"
      input: "training/Adam/gradients/dense_1/MatMul_grad/MatMul"
      input: "training/Adam/gradients/concatenate_1/concat_grad/ConcatOffset:1"
      input: "training/Adam/gradients/concatenate_1/concat_grad/ShapeN:1"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concatenate_1/concat"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/concatenate_1/concat_grad/Slice_2"
      op: "Slice"
      input: "training/Adam/gradients/dense_1/MatMul_grad/MatMul"
      input: "training/Adam/gradients/concatenate_1/concat_grad/ConcatOffset:2"
      input: "training/Adam/gradients/concatenate_1/concat_grad/ShapeN:2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concatenate_1/concat"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/concatenate_1/concat_grad/Slice_3"
      op: "Slice"
      input: "training/Adam/gradients/dense_1/MatMul_grad/MatMul"
      input: "training/Adam/gradients/concatenate_1/concat_grad/ConcatOffset:3"
      input: "training/Adam/gradients/concatenate_1/concat_grad/ShapeN:3"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concatenate_1/concat"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/Shape"
      op: "Shape"
      input: "conv1d_1/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_1/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/Size"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_1/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/add"
      op: "AddV2"
      input: "global_max_pooling1d_1/Max/reduction_indices"
      input: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_1/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/mod"
      op: "FloorMod"
      input: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/add"
      input: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_1/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_1/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/range/start"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_1/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/range/delta"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_1/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/range"
      op: "Range"
      input: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/range/start"
      input: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/Size"
      input: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_1/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/Fill/value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_1/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/Fill"
      op: "Fill"
      input: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/Shape_1"
      input: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_1/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/range"
      input: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/mod"
      input: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/Shape"
      input: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_1/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/Reshape"
      op: "Reshape"
      input: "global_max_pooling1d_1/Max"
      input: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_1/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/Reshape_1"
      op: "Reshape"
      input: "training/Adam/gradients/concatenate_1/concat_grad/Slice"
      input: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_1/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/Equal"
      op: "Equal"
      input: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/Reshape"
      input: "conv1d_1/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_1/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 118
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/Cast"
      op: "Cast"
      input: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/Equal"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_1/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 118
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/Sum"
      op: "Sum"
      input: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/Cast"
      input: "global_max_pooling1d_1/Max/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_1/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/Reshape_2"
      op: "Reshape"
      input: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/Sum"
      input: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_1/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/truediv"
      op: "RealDiv"
      input: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/Cast"
      input: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/Reshape_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_1/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 118
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/mul"
      op: "Mul"
      input: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/truediv"
      input: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_1/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 118
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/Shape"
      op: "Shape"
      input: "conv1d_2/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_2/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/Size"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_2/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/add"
      op: "AddV2"
      input: "global_max_pooling1d_2/Max/reduction_indices"
      input: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_2/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/mod"
      op: "FloorMod"
      input: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/add"
      input: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_2/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_2/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/range/start"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_2/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/range/delta"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_2/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/range"
      op: "Range"
      input: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/range/start"
      input: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/Size"
      input: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_2/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/Fill/value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_2/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/Fill"
      op: "Fill"
      input: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/Shape_1"
      input: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_2/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/range"
      input: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/mod"
      input: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/Shape"
      input: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_2/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/Reshape"
      op: "Reshape"
      input: "global_max_pooling1d_2/Max"
      input: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_2/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/Reshape_1"
      op: "Reshape"
      input: "training/Adam/gradients/concatenate_1/concat_grad/Slice_1"
      input: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_2/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/Equal"
      op: "Equal"
      input: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/Reshape"
      input: "conv1d_2/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_2/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 117
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/Cast"
      op: "Cast"
      input: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/Equal"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_2/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 117
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/Sum"
      op: "Sum"
      input: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/Cast"
      input: "global_max_pooling1d_2/Max/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_2/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/Reshape_2"
      op: "Reshape"
      input: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/Sum"
      input: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_2/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/truediv"
      op: "RealDiv"
      input: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/Cast"
      input: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/Reshape_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_2/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 117
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/mul"
      op: "Mul"
      input: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/truediv"
      input: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_2/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 117
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/Shape"
      op: "Shape"
      input: "conv1d_3/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_3/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/Size"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_3/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/add"
      op: "AddV2"
      input: "global_max_pooling1d_3/Max/reduction_indices"
      input: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_3/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/mod"
      op: "FloorMod"
      input: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/add"
      input: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_3/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_3/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/range/start"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_3/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/range/delta"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_3/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/range"
      op: "Range"
      input: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/range/start"
      input: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/Size"
      input: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_3/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/Fill/value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_3/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/Fill"
      op: "Fill"
      input: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/Shape_1"
      input: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_3/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/range"
      input: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/mod"
      input: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/Shape"
      input: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_3/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/Reshape"
      op: "Reshape"
      input: "global_max_pooling1d_3/Max"
      input: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_3/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/Reshape_1"
      op: "Reshape"
      input: "training/Adam/gradients/concatenate_1/concat_grad/Slice_2"
      input: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_3/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/Equal"
      op: "Equal"
      input: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/Reshape"
      input: "conv1d_3/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_3/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 116
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/Cast"
      op: "Cast"
      input: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/Equal"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_3/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 116
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/Sum"
      op: "Sum"
      input: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/Cast"
      input: "global_max_pooling1d_3/Max/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_3/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/Reshape_2"
      op: "Reshape"
      input: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/Sum"
      input: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_3/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/truediv"
      op: "RealDiv"
      input: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/Cast"
      input: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/Reshape_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_3/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 116
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/mul"
      op: "Mul"
      input: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/truediv"
      input: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_3/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 116
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/Shape"
      op: "Shape"
      input: "conv1d_4/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_4/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/Size"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_4/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/add"
      op: "AddV2"
      input: "global_max_pooling1d_4/Max/reduction_indices"
      input: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_4/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/mod"
      op: "FloorMod"
      input: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/add"
      input: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_4/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_4/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/range/start"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_4/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/range/delta"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_4/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/range"
      op: "Range"
      input: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/range/start"
      input: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/Size"
      input: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_4/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/Fill/value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_4/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/Fill"
      op: "Fill"
      input: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/Shape_1"
      input: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_4/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/range"
      input: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/mod"
      input: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/Shape"
      input: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_4/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/Reshape"
      op: "Reshape"
      input: "global_max_pooling1d_4/Max"
      input: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_4/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/Reshape_1"
      op: "Reshape"
      input: "training/Adam/gradients/concatenate_1/concat_grad/Slice_3"
      input: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_4/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/Equal"
      op: "Equal"
      input: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/Reshape"
      input: "conv1d_4/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_4/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 115
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/Cast"
      op: "Cast"
      input: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/Equal"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_4/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 115
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/Sum"
      op: "Sum"
      input: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/Cast"
      input: "global_max_pooling1d_4/Max/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_4/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/Reshape_2"
      op: "Reshape"
      input: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/Sum"
      input: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_4/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/truediv"
      op: "RealDiv"
      input: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/Cast"
      input: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/Reshape_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_4/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 115
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/mul"
      op: "Mul"
      input: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/truediv"
      input: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_max_pooling1d_4/Max"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 115
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_1/Relu_grad/ReluGrad"
      op: "ReluGrad"
      input: "training/Adam/gradients/global_max_pooling1d_1/Max_grad/mul"
      input: "conv1d_1/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/Relu"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 118
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_2/Relu_grad/ReluGrad"
      op: "ReluGrad"
      input: "training/Adam/gradients/global_max_pooling1d_2/Max_grad/mul"
      input: "conv1d_2/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_2/Relu"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 117
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_3/Relu_grad/ReluGrad"
      op: "ReluGrad"
      input: "training/Adam/gradients/global_max_pooling1d_3/Max_grad/mul"
      input: "conv1d_3/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_3/Relu"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 116
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_4/Relu_grad/ReluGrad"
      op: "ReluGrad"
      input: "training/Adam/gradients/global_max_pooling1d_4/Max_grad/mul"
      input: "conv1d_4/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_4/Relu"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 115
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_1/add_grad/Shape"
      op: "Shape"
      input: "conv1d_1/convolution/Squeeze"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/add"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_1/add_grad/Shape_1"
      op: "Shape"
      input: "conv1d_1/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/add"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_1/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "training/Adam/gradients/conv1d_1/add_grad/Shape"
      input: "training/Adam/gradients/conv1d_1/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/add"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_1/add_grad/Sum"
      op: "Sum"
      input: "training/Adam/gradients/conv1d_1/Relu_grad/ReluGrad"
      input: "training/Adam/gradients/conv1d_1/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/add"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_1/add_grad/Reshape"
      op: "Reshape"
      input: "training/Adam/gradients/conv1d_1/add_grad/Sum"
      input: "training/Adam/gradients/conv1d_1/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/add"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 118
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_1/add_grad/Sum_1"
      op: "Sum"
      input: "training/Adam/gradients/conv1d_1/Relu_grad/ReluGrad"
      input: "training/Adam/gradients/conv1d_1/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/add"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_1/add_grad/Reshape_1"
      op: "Reshape"
      input: "training/Adam/gradients/conv1d_1/add_grad/Sum_1"
      input: "training/Adam/gradients/conv1d_1/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/add"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_2/add_grad/Shape"
      op: "Shape"
      input: "conv1d_2/convolution/Squeeze"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_2/add"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_2/add_grad/Shape_1"
      op: "Shape"
      input: "conv1d_2/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_2/add"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_2/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "training/Adam/gradients/conv1d_2/add_grad/Shape"
      input: "training/Adam/gradients/conv1d_2/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_2/add"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_2/add_grad/Sum"
      op: "Sum"
      input: "training/Adam/gradients/conv1d_2/Relu_grad/ReluGrad"
      input: "training/Adam/gradients/conv1d_2/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_2/add"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_2/add_grad/Reshape"
      op: "Reshape"
      input: "training/Adam/gradients/conv1d_2/add_grad/Sum"
      input: "training/Adam/gradients/conv1d_2/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_2/add"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 117
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_2/add_grad/Sum_1"
      op: "Sum"
      input: "training/Adam/gradients/conv1d_2/Relu_grad/ReluGrad"
      input: "training/Adam/gradients/conv1d_2/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_2/add"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_2/add_grad/Reshape_1"
      op: "Reshape"
      input: "training/Adam/gradients/conv1d_2/add_grad/Sum_1"
      input: "training/Adam/gradients/conv1d_2/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_2/add"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_3/add_grad/Shape"
      op: "Shape"
      input: "conv1d_3/convolution/Squeeze"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_3/add"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_3/add_grad/Shape_1"
      op: "Shape"
      input: "conv1d_3/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_3/add"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_3/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "training/Adam/gradients/conv1d_3/add_grad/Shape"
      input: "training/Adam/gradients/conv1d_3/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_3/add"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_3/add_grad/Sum"
      op: "Sum"
      input: "training/Adam/gradients/conv1d_3/Relu_grad/ReluGrad"
      input: "training/Adam/gradients/conv1d_3/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_3/add"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_3/add_grad/Reshape"
      op: "Reshape"
      input: "training/Adam/gradients/conv1d_3/add_grad/Sum"
      input: "training/Adam/gradients/conv1d_3/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_3/add"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 116
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_3/add_grad/Sum_1"
      op: "Sum"
      input: "training/Adam/gradients/conv1d_3/Relu_grad/ReluGrad"
      input: "training/Adam/gradients/conv1d_3/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_3/add"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_3/add_grad/Reshape_1"
      op: "Reshape"
      input: "training/Adam/gradients/conv1d_3/add_grad/Sum_1"
      input: "training/Adam/gradients/conv1d_3/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_3/add"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_4/add_grad/Shape"
      op: "Shape"
      input: "conv1d_4/convolution/Squeeze"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_4/add"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_4/add_grad/Shape_1"
      op: "Shape"
      input: "conv1d_4/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_4/add"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_4/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "training/Adam/gradients/conv1d_4/add_grad/Shape"
      input: "training/Adam/gradients/conv1d_4/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_4/add"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_4/add_grad/Sum"
      op: "Sum"
      input: "training/Adam/gradients/conv1d_4/Relu_grad/ReluGrad"
      input: "training/Adam/gradients/conv1d_4/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_4/add"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_4/add_grad/Reshape"
      op: "Reshape"
      input: "training/Adam/gradients/conv1d_4/add_grad/Sum"
      input: "training/Adam/gradients/conv1d_4/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_4/add"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 115
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_4/add_grad/Sum_1"
      op: "Sum"
      input: "training/Adam/gradients/conv1d_4/Relu_grad/ReluGrad"
      input: "training/Adam/gradients/conv1d_4/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_4/add"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_4/add_grad/Reshape_1"
      op: "Reshape"
      input: "training/Adam/gradients/conv1d_4/add_grad/Sum_1"
      input: "training/Adam/gradients/conv1d_4/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_4/add"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_1/convolution/Squeeze_grad/Shape"
      op: "Shape"
      input: "conv1d_1/convolution"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/convolution/Squeeze"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_1/convolution/Squeeze_grad/Reshape"
      op: "Reshape"
      input: "training/Adam/gradients/conv1d_1/add_grad/Reshape"
      input: "training/Adam/gradients/conv1d_1/convolution/Squeeze_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/convolution/Squeeze"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 118
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_1/Reshape_grad/Shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_1/Reshape_grad/Reshape"
      op: "Reshape"
      input: "training/Adam/gradients/conv1d_1/add_grad/Reshape_1"
      input: "training/Adam/gradients/conv1d_1/Reshape_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_2/convolution/Squeeze_grad/Shape"
      op: "Shape"
      input: "conv1d_2/convolution"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_2/convolution/Squeeze"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_2/convolution/Squeeze_grad/Reshape"
      op: "Reshape"
      input: "training/Adam/gradients/conv1d_2/add_grad/Reshape"
      input: "training/Adam/gradients/conv1d_2/convolution/Squeeze_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_2/convolution/Squeeze"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 117
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_2/Reshape_grad/Shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_2/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_2/Reshape_grad/Reshape"
      op: "Reshape"
      input: "training/Adam/gradients/conv1d_2/add_grad/Reshape_1"
      input: "training/Adam/gradients/conv1d_2/Reshape_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_2/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_3/convolution/Squeeze_grad/Shape"
      op: "Shape"
      input: "conv1d_3/convolution"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_3/convolution/Squeeze"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_3/convolution/Squeeze_grad/Reshape"
      op: "Reshape"
      input: "training/Adam/gradients/conv1d_3/add_grad/Reshape"
      input: "training/Adam/gradients/conv1d_3/convolution/Squeeze_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_3/convolution/Squeeze"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 116
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_3/Reshape_grad/Shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_3/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_3/Reshape_grad/Reshape"
      op: "Reshape"
      input: "training/Adam/gradients/conv1d_3/add_grad/Reshape_1"
      input: "training/Adam/gradients/conv1d_3/Reshape_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_3/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_4/convolution/Squeeze_grad/Shape"
      op: "Shape"
      input: "conv1d_4/convolution"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_4/convolution/Squeeze"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_4/convolution/Squeeze_grad/Reshape"
      op: "Reshape"
      input: "training/Adam/gradients/conv1d_4/add_grad/Reshape"
      input: "training/Adam/gradients/conv1d_4/convolution/Squeeze_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_4/convolution/Squeeze"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 115
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_4/Reshape_grad/Shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_4/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_4/Reshape_grad/Reshape"
      op: "Reshape"
      input: "training/Adam/gradients/conv1d_4/add_grad/Reshape_1"
      input: "training/Adam/gradients/conv1d_4/Reshape_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_4/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_1/convolution_grad/ShapeN"
      op: "ShapeN"
      input: "conv1d_1/convolution/ExpandDims"
      input: "conv1d_1/convolution/ExpandDims_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/convolution"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_1/convolution_grad/Conv2DBackpropInput"
      op: "Conv2DBackpropInput"
      input: "training/Adam/gradients/conv1d_1/convolution_grad/ShapeN"
      input: "conv1d_1/convolution/ExpandDims_1"
      input: "training/Adam/gradients/conv1d_1/convolution/Squeeze_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/convolution"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 120
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_1/convolution_grad/Conv2DBackpropFilter"
      op: "Conv2DBackpropFilter"
      input: "conv1d_1/convolution/ExpandDims"
      input: "training/Adam/gradients/conv1d_1/convolution_grad/ShapeN:1"
      input: "training/Adam/gradients/conv1d_1/convolution/Squeeze_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/convolution"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_2/convolution_grad/ShapeN"
      op: "ShapeN"
      input: "conv1d_2/convolution/ExpandDims"
      input: "conv1d_2/convolution/ExpandDims_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_2/convolution"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_2/convolution_grad/Conv2DBackpropInput"
      op: "Conv2DBackpropInput"
      input: "training/Adam/gradients/conv1d_2/convolution_grad/ShapeN"
      input: "conv1d_2/convolution/ExpandDims_1"
      input: "training/Adam/gradients/conv1d_2/convolution/Squeeze_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_2/convolution"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 120
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_2/convolution_grad/Conv2DBackpropFilter"
      op: "Conv2DBackpropFilter"
      input: "conv1d_2/convolution/ExpandDims"
      input: "training/Adam/gradients/conv1d_2/convolution_grad/ShapeN:1"
      input: "training/Adam/gradients/conv1d_2/convolution/Squeeze_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_2/convolution"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 4
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_3/convolution_grad/ShapeN"
      op: "ShapeN"
      input: "conv1d_3/convolution/ExpandDims"
      input: "conv1d_3/convolution/ExpandDims_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_3/convolution"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_3/convolution_grad/Conv2DBackpropInput"
      op: "Conv2DBackpropInput"
      input: "training/Adam/gradients/conv1d_3/convolution_grad/ShapeN"
      input: "conv1d_3/convolution/ExpandDims_1"
      input: "training/Adam/gradients/conv1d_3/convolution/Squeeze_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_3/convolution"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 120
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_3/convolution_grad/Conv2DBackpropFilter"
      op: "Conv2DBackpropFilter"
      input: "conv1d_3/convolution/ExpandDims"
      input: "training/Adam/gradients/conv1d_3/convolution_grad/ShapeN:1"
      input: "training/Adam/gradients/conv1d_3/convolution/Squeeze_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_3/convolution"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 5
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_4/convolution_grad/ShapeN"
      op: "ShapeN"
      input: "conv1d_4/convolution/ExpandDims"
      input: "conv1d_4/convolution/ExpandDims_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_4/convolution"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_4/convolution_grad/Conv2DBackpropInput"
      op: "Conv2DBackpropInput"
      input: "training/Adam/gradients/conv1d_4/convolution_grad/ShapeN"
      input: "conv1d_4/convolution/ExpandDims_1"
      input: "training/Adam/gradients/conv1d_4/convolution/Squeeze_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_4/convolution"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 120
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_4/convolution_grad/Conv2DBackpropFilter"
      op: "Conv2DBackpropFilter"
      input: "conv1d_4/convolution/ExpandDims"
      input: "training/Adam/gradients/conv1d_4/convolution_grad/ShapeN:1"
      input: "training/Adam/gradients/conv1d_4/convolution/Squeeze_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_4/convolution"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 6
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_1/convolution/ExpandDims_grad/Shape"
      op: "Shape"
      input: "embedding_1/embedding_lookup/Identity_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/convolution/ExpandDims"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_1/convolution/ExpandDims_grad/Reshape"
      op: "Reshape"
      input: "training/Adam/gradients/conv1d_1/convolution_grad/Conv2DBackpropInput"
      input: "training/Adam/gradients/conv1d_1/convolution/ExpandDims_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/convolution/ExpandDims"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 120
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_1/convolution/ExpandDims_1_grad/Shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/convolution/ExpandDims_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\003\000\000\000\200\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_1/convolution/ExpandDims_1_grad/Reshape"
      op: "Reshape"
      input: "training/Adam/gradients/conv1d_1/convolution_grad/Conv2DBackpropFilter"
      input: "training/Adam/gradients/conv1d_1/convolution/ExpandDims_1_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/convolution/ExpandDims_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_2/convolution/ExpandDims_grad/Shape"
      op: "Shape"
      input: "embedding_1/embedding_lookup/Identity_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_2/convolution/ExpandDims"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_2/convolution/ExpandDims_grad/Reshape"
      op: "Reshape"
      input: "training/Adam/gradients/conv1d_2/convolution_grad/Conv2DBackpropInput"
      input: "training/Adam/gradients/conv1d_2/convolution/ExpandDims_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_2/convolution/ExpandDims"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 120
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_2/convolution/ExpandDims_1_grad/Shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_2/convolution/ExpandDims_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\004\000\000\000\200\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_2/convolution/ExpandDims_1_grad/Reshape"
      op: "Reshape"
      input: "training/Adam/gradients/conv1d_2/convolution_grad/Conv2DBackpropFilter"
      input: "training/Adam/gradients/conv1d_2/convolution/ExpandDims_1_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_2/convolution/ExpandDims_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_3/convolution/ExpandDims_grad/Shape"
      op: "Shape"
      input: "embedding_1/embedding_lookup/Identity_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_3/convolution/ExpandDims"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_3/convolution/ExpandDims_grad/Reshape"
      op: "Reshape"
      input: "training/Adam/gradients/conv1d_3/convolution_grad/Conv2DBackpropInput"
      input: "training/Adam/gradients/conv1d_3/convolution/ExpandDims_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_3/convolution/ExpandDims"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 120
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_3/convolution/ExpandDims_1_grad/Shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_3/convolution/ExpandDims_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\005\000\000\000\200\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_3/convolution/ExpandDims_1_grad/Reshape"
      op: "Reshape"
      input: "training/Adam/gradients/conv1d_3/convolution_grad/Conv2DBackpropFilter"
      input: "training/Adam/gradients/conv1d_3/convolution/ExpandDims_1_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_3/convolution/ExpandDims_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_4/convolution/ExpandDims_grad/Shape"
      op: "Shape"
      input: "embedding_1/embedding_lookup/Identity_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_4/convolution/ExpandDims"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_4/convolution/ExpandDims_grad/Reshape"
      op: "Reshape"
      input: "training/Adam/gradients/conv1d_4/convolution_grad/Conv2DBackpropInput"
      input: "training/Adam/gradients/conv1d_4/convolution/ExpandDims_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_4/convolution/ExpandDims"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 120
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_4/convolution/ExpandDims_1_grad/Shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_4/convolution/ExpandDims_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\006\000\000\000\200\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/conv1d_4/convolution/ExpandDims_1_grad/Reshape"
      op: "Reshape"
      input: "training/Adam/gradients/conv1d_4/convolution_grad/Conv2DBackpropFilter"
      input: "training/Adam/gradients/conv1d_4/convolution/ExpandDims_1_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_4/convolution/ExpandDims_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/AddN_2"
      op: "AddN"
      input: "training/Adam/gradients/conv1d_1/convolution/ExpandDims_grad/Reshape"
      input: "training/Adam/gradients/conv1d_2/convolution/ExpandDims_grad/Reshape"
      input: "training/Adam/gradients/conv1d_3/convolution/ExpandDims_grad/Reshape"
      input: "training/Adam/gradients/conv1d_4/convolution/ExpandDims_grad/Reshape"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1d_1/convolution/ExpandDims"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 120
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/embedding_1/embedding_lookup_grad/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@embedding_1/embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\202Y\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/embedding_1/embedding_lookup_grad/Size"
      op: "Size"
      input: "embedding_1/Cast"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@embedding_1/embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/gradients/embedding_1/embedding_lookup_grad/ExpandDims/dim"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@embedding_1/embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/embedding_1/embedding_lookup_grad/ExpandDims"
      op: "ExpandDims"
      input: "training/Adam/gradients/embedding_1/embedding_lookup_grad/Size"
      input: "training/Adam/gradients/embedding_1/embedding_lookup_grad/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@embedding_1/embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/embedding_1/embedding_lookup_grad/strided_slice/stack"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@embedding_1/embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/embedding_1/embedding_lookup_grad/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@embedding_1/embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/embedding_1/embedding_lookup_grad/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@embedding_1/embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/embedding_1/embedding_lookup_grad/strided_slice"
      op: "StridedSlice"
      input: "training/Adam/gradients/embedding_1/embedding_lookup_grad/Const"
      input: "training/Adam/gradients/embedding_1/embedding_lookup_grad/strided_slice/stack"
      input: "training/Adam/gradients/embedding_1/embedding_lookup_grad/strided_slice/stack_1"
      input: "training/Adam/gradients/embedding_1/embedding_lookup_grad/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@embedding_1/embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "training/Adam/gradients/embedding_1/embedding_lookup_grad/concat/axis"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@embedding_1/embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/embedding_1/embedding_lookup_grad/concat"
      op: "ConcatV2"
      input: "training/Adam/gradients/embedding_1/embedding_lookup_grad/ExpandDims"
      input: "training/Adam/gradients/embedding_1/embedding_lookup_grad/strided_slice"
      input: "training/Adam/gradients/embedding_1/embedding_lookup_grad/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@embedding_1/embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/embedding_1/embedding_lookup_grad/Reshape"
      op: "Reshape"
      input: "training/Adam/gradients/AddN_2"
      input: "training/Adam/gradients/embedding_1/embedding_lookup_grad/concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@embedding_1/embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/gradients/embedding_1/embedding_lookup_grad/Reshape_1"
      op: "Reshape"
      input: "embedding_1/Cast"
      input: "training/Adam/gradients/embedding_1/embedding_lookup_grad/ExpandDims"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@embedding_1/embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adam/AssignAddVariableOp"
      op: "AssignAddVariableOp"
      input: "Adam/iterations"
      input: "training/Adam/Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adam/iterations"
      input: "^training/Adam/AssignAddVariableOp"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
    }
    node {
      name: "training/Adam/Cast/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adam/iterations"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
    }
    node {
      name: "training/Adam/Cast"
      op: "Cast"
      input: "training/Adam/Cast/ReadVariableOp"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/add/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "training/Adam/add"
      op: "AddV2"
      input: "training/Adam/Cast"
      input: "training/Adam/add/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Pow/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adam/beta_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/Pow"
      op: "Pow"
      input: "training/Adam/Pow/ReadVariableOp"
      input: "training/Adam/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/sub/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "training/Adam/sub"
      op: "Sub"
      input: "training/Adam/sub/x"
      input: "training/Adam/Pow"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/Const_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adam/clip_by_value/Minimum"
      op: "Minimum"
      input: "training/Adam/sub"
      input: "training/Adam/Const_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/clip_by_value"
      op: "Maximum"
      input: "training/Adam/clip_by_value/Minimum"
      input: "training/Adam/Const_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Sqrt"
      op: "Sqrt"
      input: "training/Adam/clip_by_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Pow_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adam/beta_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/Pow_1"
      op: "Pow"
      input: "training/Adam/Pow_1/ReadVariableOp"
      input: "training/Adam/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/sub_1/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "training/Adam/sub_1"
      op: "Sub"
      input: "training/Adam/sub_1/x"
      input: "training/Adam/Pow_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/truediv"
      op: "RealDiv"
      input: "training/Adam/Sqrt"
      input: "training/Adam/sub_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "Adam/learning_rate"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul"
      op: "Mul"
      input: "training/Adam/ReadVariableOp_1"
      input: "training/Adam/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/m_0/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\202Y\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "training/Adam/m_0/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/m_0"
      op: "Fill"
      input: "training/Adam/m_0/shape_as_tensor"
      input: "training/Adam/m_0/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 22914
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/m_0_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adam/m_0_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 22914
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adam/m_0_1"
        }
      }
    }
    node {
      name: "training/Adam/m_0_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adam/m_0_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/m_0_1/Assign"
      op: "AssignVariableOp"
      input: "training/Adam/m_0_1"
      input: "training/Adam/m_0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/m_0_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/m_0_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 22914
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/m_1/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\003\000\000\000\200\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "training/Adam/m_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/m_1"
      op: "Fill"
      input: "training/Adam/m_1/shape_as_tensor"
      input: "training/Adam/m_1/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/m_1_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adam/m_1_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 128
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adam/m_1_1"
        }
      }
    }
    node {
      name: "training/Adam/m_1_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adam/m_1_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/m_1_1/Assign"
      op: "AssignVariableOp"
      input: "training/Adam/m_1_1"
      input: "training/Adam/m_1"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/m_1_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/m_1_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/m_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/m_2_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adam/m_2_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adam/m_2_1"
        }
      }
    }
    node {
      name: "training/Adam/m_2_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adam/m_2_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/m_2_1/Assign"
      op: "AssignVariableOp"
      input: "training/Adam/m_2_1"
      input: "training/Adam/m_2"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/m_2_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/m_2_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/m_3/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\004\000\000\000\200\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "training/Adam/m_3/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/m_3"
      op: "Fill"
      input: "training/Adam/m_3/shape_as_tensor"
      input: "training/Adam/m_3/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/m_3_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adam/m_3_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 4
            }
            dim {
              size: 128
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adam/m_3_1"
        }
      }
    }
    node {
      name: "training/Adam/m_3_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adam/m_3_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/m_3_1/Assign"
      op: "AssignVariableOp"
      input: "training/Adam/m_3_1"
      input: "training/Adam/m_3"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/m_3_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/m_3_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/m_4"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/m_4_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adam/m_4_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adam/m_4_1"
        }
      }
    }
    node {
      name: "training/Adam/m_4_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adam/m_4_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/m_4_1/Assign"
      op: "AssignVariableOp"
      input: "training/Adam/m_4_1"
      input: "training/Adam/m_4"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/m_4_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/m_4_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/m_5/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\005\000\000\000\200\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "training/Adam/m_5/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/m_5"
      op: "Fill"
      input: "training/Adam/m_5/shape_as_tensor"
      input: "training/Adam/m_5/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/m_5_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adam/m_5_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 5
            }
            dim {
              size: 128
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adam/m_5_1"
        }
      }
    }
    node {
      name: "training/Adam/m_5_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adam/m_5_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/m_5_1/Assign"
      op: "AssignVariableOp"
      input: "training/Adam/m_5_1"
      input: "training/Adam/m_5"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/m_5_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/m_5_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/m_6"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/m_6_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adam/m_6_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adam/m_6_1"
        }
      }
    }
    node {
      name: "training/Adam/m_6_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adam/m_6_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/m_6_1/Assign"
      op: "AssignVariableOp"
      input: "training/Adam/m_6_1"
      input: "training/Adam/m_6"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/m_6_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/m_6_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/m_7/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\006\000\000\000\200\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "training/Adam/m_7/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/m_7"
      op: "Fill"
      input: "training/Adam/m_7/shape_as_tensor"
      input: "training/Adam/m_7/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/m_7_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adam/m_7_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 6
            }
            dim {
              size: 128
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adam/m_7_1"
        }
      }
    }
    node {
      name: "training/Adam/m_7_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adam/m_7_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/m_7_1/Assign"
      op: "AssignVariableOp"
      input: "training/Adam/m_7_1"
      input: "training/Adam/m_7"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/m_7_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/m_7_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/m_8"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/m_8_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adam/m_8_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adam/m_8_1"
        }
      }
    }
    node {
      name: "training/Adam/m_8_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adam/m_8_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/m_8_1/Assign"
      op: "AssignVariableOp"
      input: "training/Adam/m_8_1"
      input: "training/Adam/m_8"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/m_8_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/m_8_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/m_9/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\001\000\000\006\000\000\000"
          }
        }
      }
    }
    node {
      name: "training/Adam/m_9/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/m_9"
      op: "Fill"
      input: "training/Adam/m_9/shape_as_tensor"
      input: "training/Adam/m_9/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/m_9_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adam/m_9_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 256
            }
            dim {
              size: 6
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adam/m_9_1"
        }
      }
    }
    node {
      name: "training/Adam/m_9_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adam/m_9_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/m_9_1/Assign"
      op: "AssignVariableOp"
      input: "training/Adam/m_9_1"
      input: "training/Adam/m_9"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/m_9_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/m_9_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/m_10"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 6
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/m_10_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adam/m_10_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 6
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adam/m_10_1"
        }
      }
    }
    node {
      name: "training/Adam/m_10_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adam/m_10_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/m_10_1/Assign"
      op: "AssignVariableOp"
      input: "training/Adam/m_10_1"
      input: "training/Adam/m_10"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/m_10_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/m_10_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/v_0/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\202Y\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "training/Adam/v_0/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/v_0"
      op: "Fill"
      input: "training/Adam/v_0/shape_as_tensor"
      input: "training/Adam/v_0/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 22914
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/v_0_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adam/v_0_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 22914
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adam/v_0_1"
        }
      }
    }
    node {
      name: "training/Adam/v_0_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adam/v_0_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/v_0_1/Assign"
      op: "AssignVariableOp"
      input: "training/Adam/v_0_1"
      input: "training/Adam/v_0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/v_0_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/v_0_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 22914
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/v_1/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\003\000\000\000\200\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "training/Adam/v_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/v_1"
      op: "Fill"
      input: "training/Adam/v_1/shape_as_tensor"
      input: "training/Adam/v_1/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/v_1_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adam/v_1_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 128
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adam/v_1_1"
        }
      }
    }
    node {
      name: "training/Adam/v_1_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adam/v_1_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/v_1_1/Assign"
      op: "AssignVariableOp"
      input: "training/Adam/v_1_1"
      input: "training/Adam/v_1"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/v_1_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/v_1_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/v_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/v_2_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adam/v_2_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adam/v_2_1"
        }
      }
    }
    node {
      name: "training/Adam/v_2_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adam/v_2_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/v_2_1/Assign"
      op: "AssignVariableOp"
      input: "training/Adam/v_2_1"
      input: "training/Adam/v_2"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/v_2_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/v_2_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/v_3/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\004\000\000\000\200\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "training/Adam/v_3/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/v_3"
      op: "Fill"
      input: "training/Adam/v_3/shape_as_tensor"
      input: "training/Adam/v_3/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/v_3_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adam/v_3_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 4
            }
            dim {
              size: 128
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adam/v_3_1"
        }
      }
    }
    node {
      name: "training/Adam/v_3_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adam/v_3_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/v_3_1/Assign"
      op: "AssignVariableOp"
      input: "training/Adam/v_3_1"
      input: "training/Adam/v_3"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/v_3_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/v_3_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/v_4"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/v_4_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adam/v_4_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adam/v_4_1"
        }
      }
    }
    node {
      name: "training/Adam/v_4_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adam/v_4_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/v_4_1/Assign"
      op: "AssignVariableOp"
      input: "training/Adam/v_4_1"
      input: "training/Adam/v_4"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/v_4_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/v_4_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/v_5/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\005\000\000\000\200\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "training/Adam/v_5/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/v_5"
      op: "Fill"
      input: "training/Adam/v_5/shape_as_tensor"
      input: "training/Adam/v_5/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/v_5_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adam/v_5_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 5
            }
            dim {
              size: 128
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adam/v_5_1"
        }
      }
    }
    node {
      name: "training/Adam/v_5_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adam/v_5_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/v_5_1/Assign"
      op: "AssignVariableOp"
      input: "training/Adam/v_5_1"
      input: "training/Adam/v_5"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/v_5_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/v_5_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/v_6"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/v_6_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adam/v_6_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adam/v_6_1"
        }
      }
    }
    node {
      name: "training/Adam/v_6_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adam/v_6_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/v_6_1/Assign"
      op: "AssignVariableOp"
      input: "training/Adam/v_6_1"
      input: "training/Adam/v_6"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/v_6_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/v_6_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/v_7/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\006\000\000\000\200\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "training/Adam/v_7/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/v_7"
      op: "Fill"
      input: "training/Adam/v_7/shape_as_tensor"
      input: "training/Adam/v_7/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/v_7_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adam/v_7_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 6
            }
            dim {
              size: 128
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adam/v_7_1"
        }
      }
    }
    node {
      name: "training/Adam/v_7_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adam/v_7_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/v_7_1/Assign"
      op: "AssignVariableOp"
      input: "training/Adam/v_7_1"
      input: "training/Adam/v_7"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/v_7_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/v_7_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/v_8"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/v_8_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adam/v_8_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adam/v_8_1"
        }
      }
    }
    node {
      name: "training/Adam/v_8_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adam/v_8_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/v_8_1/Assign"
      op: "AssignVariableOp"
      input: "training/Adam/v_8_1"
      input: "training/Adam/v_8"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/v_8_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/v_8_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/v_9/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\001\000\000\006\000\000\000"
          }
        }
      }
    }
    node {
      name: "training/Adam/v_9/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/v_9"
      op: "Fill"
      input: "training/Adam/v_9/shape_as_tensor"
      input: "training/Adam/v_9/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/v_9_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adam/v_9_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 256
            }
            dim {
              size: 6
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adam/v_9_1"
        }
      }
    }
    node {
      name: "training/Adam/v_9_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adam/v_9_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/v_9_1/Assign"
      op: "AssignVariableOp"
      input: "training/Adam/v_9_1"
      input: "training/Adam/v_9"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/v_9_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/v_9_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/v_10"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 6
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/v_10_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adam/v_10_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 6
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adam/v_10_1"
        }
      }
    }
    node {
      name: "training/Adam/v_10_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adam/v_10_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/v_10_1/Assign"
      op: "AssignVariableOp"
      input: "training/Adam/v_10_1"
      input: "training/Adam/v_10"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/v_10_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/v_10_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/vhat_0/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adam/vhat_0/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/vhat_0"
      op: "Fill"
      input: "training/Adam/vhat_0/shape_as_tensor"
      input: "training/Adam/vhat_0/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/vhat_0_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adam/vhat_0_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adam/vhat_0_1"
        }
      }
    }
    node {
      name: "training/Adam/vhat_0_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adam/vhat_0_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/vhat_0_1/Assign"
      op: "AssignVariableOp"
      input: "training/Adam/vhat_0_1"
      input: "training/Adam/vhat_0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/vhat_0_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/vhat_0_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/vhat_1/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adam/vhat_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/vhat_1"
      op: "Fill"
      input: "training/Adam/vhat_1/shape_as_tensor"
      input: "training/Adam/vhat_1/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/vhat_1_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adam/vhat_1_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adam/vhat_1_1"
        }
      }
    }
    node {
      name: "training/Adam/vhat_1_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adam/vhat_1_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/vhat_1_1/Assign"
      op: "AssignVariableOp"
      input: "training/Adam/vhat_1_1"
      input: "training/Adam/vhat_1"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/vhat_1_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/vhat_1_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/vhat_2/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adam/vhat_2/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/vhat_2"
      op: "Fill"
      input: "training/Adam/vhat_2/shape_as_tensor"
      input: "training/Adam/vhat_2/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/vhat_2_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adam/vhat_2_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adam/vhat_2_1"
        }
      }
    }
    node {
      name: "training/Adam/vhat_2_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adam/vhat_2_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/vhat_2_1/Assign"
      op: "AssignVariableOp"
      input: "training/Adam/vhat_2_1"
      input: "training/Adam/vhat_2"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/vhat_2_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/vhat_2_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/vhat_3/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adam/vhat_3/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/vhat_3"
      op: "Fill"
      input: "training/Adam/vhat_3/shape_as_tensor"
      input: "training/Adam/vhat_3/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/vhat_3_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adam/vhat_3_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adam/vhat_3_1"
        }
      }
    }
    node {
      name: "training/Adam/vhat_3_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adam/vhat_3_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/vhat_3_1/Assign"
      op: "AssignVariableOp"
      input: "training/Adam/vhat_3_1"
      input: "training/Adam/vhat_3"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/vhat_3_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/vhat_3_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/vhat_4/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adam/vhat_4/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/vhat_4"
      op: "Fill"
      input: "training/Adam/vhat_4/shape_as_tensor"
      input: "training/Adam/vhat_4/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/vhat_4_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adam/vhat_4_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adam/vhat_4_1"
        }
      }
    }
    node {
      name: "training/Adam/vhat_4_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adam/vhat_4_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/vhat_4_1/Assign"
      op: "AssignVariableOp"
      input: "training/Adam/vhat_4_1"
      input: "training/Adam/vhat_4"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/vhat_4_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/vhat_4_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/vhat_5/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adam/vhat_5/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/vhat_5"
      op: "Fill"
      input: "training/Adam/vhat_5/shape_as_tensor"
      input: "training/Adam/vhat_5/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/vhat_5_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adam/vhat_5_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adam/vhat_5_1"
        }
      }
    }
    node {
      name: "training/Adam/vhat_5_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adam/vhat_5_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/vhat_5_1/Assign"
      op: "AssignVariableOp"
      input: "training/Adam/vhat_5_1"
      input: "training/Adam/vhat_5"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/vhat_5_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/vhat_5_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/vhat_6/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adam/vhat_6/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/vhat_6"
      op: "Fill"
      input: "training/Adam/vhat_6/shape_as_tensor"
      input: "training/Adam/vhat_6/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/vhat_6_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adam/vhat_6_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adam/vhat_6_1"
        }
      }
    }
    node {
      name: "training/Adam/vhat_6_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adam/vhat_6_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/vhat_6_1/Assign"
      op: "AssignVariableOp"
      input: "training/Adam/vhat_6_1"
      input: "training/Adam/vhat_6"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/vhat_6_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/vhat_6_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/vhat_7/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adam/vhat_7/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/vhat_7"
      op: "Fill"
      input: "training/Adam/vhat_7/shape_as_tensor"
      input: "training/Adam/vhat_7/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/vhat_7_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adam/vhat_7_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adam/vhat_7_1"
        }
      }
    }
    node {
      name: "training/Adam/vhat_7_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adam/vhat_7_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/vhat_7_1/Assign"
      op: "AssignVariableOp"
      input: "training/Adam/vhat_7_1"
      input: "training/Adam/vhat_7"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/vhat_7_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/vhat_7_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/vhat_8/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adam/vhat_8/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/vhat_8"
      op: "Fill"
      input: "training/Adam/vhat_8/shape_as_tensor"
      input: "training/Adam/vhat_8/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/vhat_8_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adam/vhat_8_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adam/vhat_8_1"
        }
      }
    }
    node {
      name: "training/Adam/vhat_8_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adam/vhat_8_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/vhat_8_1/Assign"
      op: "AssignVariableOp"
      input: "training/Adam/vhat_8_1"
      input: "training/Adam/vhat_8"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/vhat_8_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/vhat_8_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/vhat_9/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adam/vhat_9/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/vhat_9"
      op: "Fill"
      input: "training/Adam/vhat_9/shape_as_tensor"
      input: "training/Adam/vhat_9/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/vhat_9_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adam/vhat_9_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adam/vhat_9_1"
        }
      }
    }
    node {
      name: "training/Adam/vhat_9_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adam/vhat_9_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/vhat_9_1/Assign"
      op: "AssignVariableOp"
      input: "training/Adam/vhat_9_1"
      input: "training/Adam/vhat_9"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/vhat_9_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/vhat_9_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/vhat_10/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adam/vhat_10/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/vhat_10"
      op: "Fill"
      input: "training/Adam/vhat_10/shape_as_tensor"
      input: "training/Adam/vhat_10/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adam/vhat_10_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adam/vhat_10_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adam/vhat_10_1"
        }
      }
    }
    node {
      name: "training/Adam/vhat_10_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adam/vhat_10_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/vhat_10_1/Assign"
      op: "AssignVariableOp"
      input: "training/Adam/vhat_10_1"
      input: "training/Adam/vhat_10"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/vhat_10_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/vhat_10_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_2"
      op: "ReadVariableOp"
      input: "Adam/beta_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/m_0_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 22914
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_1"
      op: "Mul"
      input: "training/Adam/ReadVariableOp_2"
      input: "training/Adam/mul_1/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 22914
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_3"
      op: "ReadVariableOp"
      input: "Adam/beta_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/sub_2/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "training/Adam/sub_2"
      op: "Sub"
      input: "training/Adam/sub_2/x"
      input: "training/Adam/ReadVariableOp_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_2/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_2/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_2/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_2/strided_slice"
      op: "StridedSlice"
      input: "training/Adam/gradients/embedding_1/embedding_lookup_grad/Const"
      input: "training/Adam/mul_2/strided_slice/stack"
      input: "training/Adam/mul_2/strided_slice/stack_1"
      input: "training/Adam/mul_2/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "training/Adam/mul_2/y"
      op: "UnsortedSegmentSum"
      input: "training/Adam/gradients/embedding_1/embedding_lookup_grad/Reshape"
      input: "training/Adam/gradients/embedding_1/embedding_lookup_grad/Reshape_1"
      input: "training/Adam/mul_2/strided_slice"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tnumsegments"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 22914
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_2"
      op: "Mul"
      input: "training/Adam/sub_2"
      input: "training/Adam/mul_2/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 22914
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/add_1"
      op: "AddV2"
      input: "training/Adam/mul_1"
      input: "training/Adam/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 22914
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_4"
      op: "ReadVariableOp"
      input: "Adam/beta_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_3/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/v_0_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 22914
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_3"
      op: "Mul"
      input: "training/Adam/ReadVariableOp_4"
      input: "training/Adam/mul_3/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 22914
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_5"
      op: "ReadVariableOp"
      input: "Adam/beta_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/sub_3/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "training/Adam/sub_3"
      op: "Sub"
      input: "training/Adam/sub_3/x"
      input: "training/Adam/ReadVariableOp_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Square/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "training/Adam/Square/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adam/Square/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adam/Square/strided_slice"
      op: "StridedSlice"
      input: "training/Adam/gradients/embedding_1/embedding_lookup_grad/Const"
      input: "training/Adam/Square/strided_slice/stack"
      input: "training/Adam/Square/strided_slice/stack_1"
      input: "training/Adam/Square/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "training/Adam/Square/x"
      op: "UnsortedSegmentSum"
      input: "training/Adam/gradients/embedding_1/embedding_lookup_grad/Reshape"
      input: "training/Adam/gradients/embedding_1/embedding_lookup_grad/Reshape_1"
      input: "training/Adam/Square/strided_slice"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tnumsegments"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 22914
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Square"
      op: "Square"
      input: "training/Adam/Square/x"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 22914
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_4"
      op: "Mul"
      input: "training/Adam/sub_3"
      input: "training/Adam/Square"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 22914
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/add_2"
      op: "AddV2"
      input: "training/Adam/mul_3"
      input: "training/Adam/mul_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 22914
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_5"
      op: "Mul"
      input: "training/Adam/mul"
      input: "training/Adam/add_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 22914
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Const_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/Const_4"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adam/clip_by_value_1/Minimum"
      op: "Minimum"
      input: "training/Adam/add_2"
      input: "training/Adam/Const_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 22914
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/clip_by_value_1"
      op: "Maximum"
      input: "training/Adam/clip_by_value_1/Minimum"
      input: "training/Adam/Const_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 22914
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Sqrt_1"
      op: "Sqrt"
      input: "training/Adam/clip_by_value_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 22914
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/add_3/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adam/add_3"
      op: "AddV2"
      input: "training/Adam/Sqrt_1"
      input: "training/Adam/add_3/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 22914
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/truediv_1"
      op: "RealDiv"
      input: "training/Adam/mul_5"
      input: "training/Adam/add_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 22914
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_6"
      op: "ReadVariableOp"
      input: "embedding_1/embeddings"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 22914
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/sub_4"
      op: "Sub"
      input: "training/Adam/ReadVariableOp_6"
      input: "training/Adam/truediv_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 22914
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/AssignVariableOp"
      op: "AssignVariableOp"
      input: "training/Adam/m_0_1"
      input: "training/Adam/add_1"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_7"
      op: "ReadVariableOp"
      input: "training/Adam/m_0_1"
      input: "^training/Adam/AssignVariableOp"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 22914
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/AssignVariableOp_1"
      op: "AssignVariableOp"
      input: "training/Adam/v_0_1"
      input: "training/Adam/add_2"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_8"
      op: "ReadVariableOp"
      input: "training/Adam/v_0_1"
      input: "^training/Adam/AssignVariableOp_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 22914
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/AssignVariableOp_2"
      op: "AssignVariableOp"
      input: "embedding_1/embeddings"
      input: "training/Adam/sub_4"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_9"
      op: "ReadVariableOp"
      input: "embedding_1/embeddings"
      input: "^training/Adam/AssignVariableOp_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 22914
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_10"
      op: "ReadVariableOp"
      input: "Adam/beta_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_6/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/m_1_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_6"
      op: "Mul"
      input: "training/Adam/ReadVariableOp_10"
      input: "training/Adam/mul_6/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_11"
      op: "ReadVariableOp"
      input: "Adam/beta_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/sub_5/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "training/Adam/sub_5"
      op: "Sub"
      input: "training/Adam/sub_5/x"
      input: "training/Adam/ReadVariableOp_11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_7"
      op: "Mul"
      input: "training/Adam/sub_5"
      input: "training/Adam/gradients/conv1d_1/convolution/ExpandDims_1_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/add_4"
      op: "AddV2"
      input: "training/Adam/mul_6"
      input: "training/Adam/mul_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_12"
      op: "ReadVariableOp"
      input: "Adam/beta_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_8/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/v_1_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_8"
      op: "Mul"
      input: "training/Adam/ReadVariableOp_12"
      input: "training/Adam/mul_8/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_13"
      op: "ReadVariableOp"
      input: "Adam/beta_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/sub_6/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "training/Adam/sub_6"
      op: "Sub"
      input: "training/Adam/sub_6/x"
      input: "training/Adam/ReadVariableOp_13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Square_1"
      op: "Square"
      input: "training/Adam/gradients/conv1d_1/convolution/ExpandDims_1_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_9"
      op: "Mul"
      input: "training/Adam/sub_6"
      input: "training/Adam/Square_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/add_5"
      op: "AddV2"
      input: "training/Adam/mul_8"
      input: "training/Adam/mul_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_10"
      op: "Mul"
      input: "training/Adam/mul"
      input: "training/Adam/add_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Const_5"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/Const_6"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adam/clip_by_value_2/Minimum"
      op: "Minimum"
      input: "training/Adam/add_5"
      input: "training/Adam/Const_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/clip_by_value_2"
      op: "Maximum"
      input: "training/Adam/clip_by_value_2/Minimum"
      input: "training/Adam/Const_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Sqrt_2"
      op: "Sqrt"
      input: "training/Adam/clip_by_value_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/add_6/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adam/add_6"
      op: "AddV2"
      input: "training/Adam/Sqrt_2"
      input: "training/Adam/add_6/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/truediv_2"
      op: "RealDiv"
      input: "training/Adam/mul_10"
      input: "training/Adam/add_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_14"
      op: "ReadVariableOp"
      input: "conv1d_1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/sub_7"
      op: "Sub"
      input: "training/Adam/ReadVariableOp_14"
      input: "training/Adam/truediv_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/AssignVariableOp_3"
      op: "AssignVariableOp"
      input: "training/Adam/m_1_1"
      input: "training/Adam/add_4"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_15"
      op: "ReadVariableOp"
      input: "training/Adam/m_1_1"
      input: "^training/Adam/AssignVariableOp_3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/AssignVariableOp_4"
      op: "AssignVariableOp"
      input: "training/Adam/v_1_1"
      input: "training/Adam/add_5"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_16"
      op: "ReadVariableOp"
      input: "training/Adam/v_1_1"
      input: "^training/Adam/AssignVariableOp_4"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/AssignVariableOp_5"
      op: "AssignVariableOp"
      input: "conv1d_1/kernel"
      input: "training/Adam/sub_7"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_17"
      op: "ReadVariableOp"
      input: "conv1d_1/kernel"
      input: "^training/Adam/AssignVariableOp_5"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_18"
      op: "ReadVariableOp"
      input: "Adam/beta_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_11/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/m_2_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_11"
      op: "Mul"
      input: "training/Adam/ReadVariableOp_18"
      input: "training/Adam/mul_11/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_19"
      op: "ReadVariableOp"
      input: "Adam/beta_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/sub_8/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "training/Adam/sub_8"
      op: "Sub"
      input: "training/Adam/sub_8/x"
      input: "training/Adam/ReadVariableOp_19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_12"
      op: "Mul"
      input: "training/Adam/sub_8"
      input: "training/Adam/gradients/conv1d_1/Reshape_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/add_7"
      op: "AddV2"
      input: "training/Adam/mul_11"
      input: "training/Adam/mul_12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_20"
      op: "ReadVariableOp"
      input: "Adam/beta_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_13/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/v_2_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_13"
      op: "Mul"
      input: "training/Adam/ReadVariableOp_20"
      input: "training/Adam/mul_13/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_21"
      op: "ReadVariableOp"
      input: "Adam/beta_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/sub_9/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "training/Adam/sub_9"
      op: "Sub"
      input: "training/Adam/sub_9/x"
      input: "training/Adam/ReadVariableOp_21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Square_2"
      op: "Square"
      input: "training/Adam/gradients/conv1d_1/Reshape_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_14"
      op: "Mul"
      input: "training/Adam/sub_9"
      input: "training/Adam/Square_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/add_8"
      op: "AddV2"
      input: "training/Adam/mul_13"
      input: "training/Adam/mul_14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_15"
      op: "Mul"
      input: "training/Adam/mul"
      input: "training/Adam/add_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Const_7"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/Const_8"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adam/clip_by_value_3/Minimum"
      op: "Minimum"
      input: "training/Adam/add_8"
      input: "training/Adam/Const_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/clip_by_value_3"
      op: "Maximum"
      input: "training/Adam/clip_by_value_3/Minimum"
      input: "training/Adam/Const_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Sqrt_3"
      op: "Sqrt"
      input: "training/Adam/clip_by_value_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/add_9/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adam/add_9"
      op: "AddV2"
      input: "training/Adam/Sqrt_3"
      input: "training/Adam/add_9/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/truediv_3"
      op: "RealDiv"
      input: "training/Adam/mul_15"
      input: "training/Adam/add_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_22"
      op: "ReadVariableOp"
      input: "conv1d_1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/sub_10"
      op: "Sub"
      input: "training/Adam/ReadVariableOp_22"
      input: "training/Adam/truediv_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/AssignVariableOp_6"
      op: "AssignVariableOp"
      input: "training/Adam/m_2_1"
      input: "training/Adam/add_7"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_23"
      op: "ReadVariableOp"
      input: "training/Adam/m_2_1"
      input: "^training/Adam/AssignVariableOp_6"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/AssignVariableOp_7"
      op: "AssignVariableOp"
      input: "training/Adam/v_2_1"
      input: "training/Adam/add_8"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_24"
      op: "ReadVariableOp"
      input: "training/Adam/v_2_1"
      input: "^training/Adam/AssignVariableOp_7"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/AssignVariableOp_8"
      op: "AssignVariableOp"
      input: "conv1d_1/bias"
      input: "training/Adam/sub_10"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_25"
      op: "ReadVariableOp"
      input: "conv1d_1/bias"
      input: "^training/Adam/AssignVariableOp_8"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_26"
      op: "ReadVariableOp"
      input: "Adam/beta_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_16/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/m_3_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_16"
      op: "Mul"
      input: "training/Adam/ReadVariableOp_26"
      input: "training/Adam/mul_16/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_27"
      op: "ReadVariableOp"
      input: "Adam/beta_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/sub_11/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "training/Adam/sub_11"
      op: "Sub"
      input: "training/Adam/sub_11/x"
      input: "training/Adam/ReadVariableOp_27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_17"
      op: "Mul"
      input: "training/Adam/sub_11"
      input: "training/Adam/gradients/conv1d_2/convolution/ExpandDims_1_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/add_10"
      op: "AddV2"
      input: "training/Adam/mul_16"
      input: "training/Adam/mul_17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_28"
      op: "ReadVariableOp"
      input: "Adam/beta_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_18/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/v_3_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_18"
      op: "Mul"
      input: "training/Adam/ReadVariableOp_28"
      input: "training/Adam/mul_18/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_29"
      op: "ReadVariableOp"
      input: "Adam/beta_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/sub_12/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "training/Adam/sub_12"
      op: "Sub"
      input: "training/Adam/sub_12/x"
      input: "training/Adam/ReadVariableOp_29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Square_3"
      op: "Square"
      input: "training/Adam/gradients/conv1d_2/convolution/ExpandDims_1_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_19"
      op: "Mul"
      input: "training/Adam/sub_12"
      input: "training/Adam/Square_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/add_11"
      op: "AddV2"
      input: "training/Adam/mul_18"
      input: "training/Adam/mul_19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_20"
      op: "Mul"
      input: "training/Adam/mul"
      input: "training/Adam/add_10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Const_9"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/Const_10"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adam/clip_by_value_4/Minimum"
      op: "Minimum"
      input: "training/Adam/add_11"
      input: "training/Adam/Const_10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/clip_by_value_4"
      op: "Maximum"
      input: "training/Adam/clip_by_value_4/Minimum"
      input: "training/Adam/Const_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Sqrt_4"
      op: "Sqrt"
      input: "training/Adam/clip_by_value_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/add_12/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adam/add_12"
      op: "AddV2"
      input: "training/Adam/Sqrt_4"
      input: "training/Adam/add_12/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/truediv_4"
      op: "RealDiv"
      input: "training/Adam/mul_20"
      input: "training/Adam/add_12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_30"
      op: "ReadVariableOp"
      input: "conv1d_2/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/sub_13"
      op: "Sub"
      input: "training/Adam/ReadVariableOp_30"
      input: "training/Adam/truediv_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/AssignVariableOp_9"
      op: "AssignVariableOp"
      input: "training/Adam/m_3_1"
      input: "training/Adam/add_10"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_31"
      op: "ReadVariableOp"
      input: "training/Adam/m_3_1"
      input: "^training/Adam/AssignVariableOp_9"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/AssignVariableOp_10"
      op: "AssignVariableOp"
      input: "training/Adam/v_3_1"
      input: "training/Adam/add_11"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_32"
      op: "ReadVariableOp"
      input: "training/Adam/v_3_1"
      input: "^training/Adam/AssignVariableOp_10"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/AssignVariableOp_11"
      op: "AssignVariableOp"
      input: "conv1d_2/kernel"
      input: "training/Adam/sub_13"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_33"
      op: "ReadVariableOp"
      input: "conv1d_2/kernel"
      input: "^training/Adam/AssignVariableOp_11"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_34"
      op: "ReadVariableOp"
      input: "Adam/beta_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_21/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/m_4_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_21"
      op: "Mul"
      input: "training/Adam/ReadVariableOp_34"
      input: "training/Adam/mul_21/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_35"
      op: "ReadVariableOp"
      input: "Adam/beta_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/sub_14/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "training/Adam/sub_14"
      op: "Sub"
      input: "training/Adam/sub_14/x"
      input: "training/Adam/ReadVariableOp_35"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_22"
      op: "Mul"
      input: "training/Adam/sub_14"
      input: "training/Adam/gradients/conv1d_2/Reshape_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/add_13"
      op: "AddV2"
      input: "training/Adam/mul_21"
      input: "training/Adam/mul_22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_36"
      op: "ReadVariableOp"
      input: "Adam/beta_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_23/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/v_4_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_23"
      op: "Mul"
      input: "training/Adam/ReadVariableOp_36"
      input: "training/Adam/mul_23/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_37"
      op: "ReadVariableOp"
      input: "Adam/beta_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/sub_15/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "training/Adam/sub_15"
      op: "Sub"
      input: "training/Adam/sub_15/x"
      input: "training/Adam/ReadVariableOp_37"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Square_4"
      op: "Square"
      input: "training/Adam/gradients/conv1d_2/Reshape_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_24"
      op: "Mul"
      input: "training/Adam/sub_15"
      input: "training/Adam/Square_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/add_14"
      op: "AddV2"
      input: "training/Adam/mul_23"
      input: "training/Adam/mul_24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_25"
      op: "Mul"
      input: "training/Adam/mul"
      input: "training/Adam/add_13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Const_11"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/Const_12"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adam/clip_by_value_5/Minimum"
      op: "Minimum"
      input: "training/Adam/add_14"
      input: "training/Adam/Const_12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/clip_by_value_5"
      op: "Maximum"
      input: "training/Adam/clip_by_value_5/Minimum"
      input: "training/Adam/Const_11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Sqrt_5"
      op: "Sqrt"
      input: "training/Adam/clip_by_value_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/add_15/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adam/add_15"
      op: "AddV2"
      input: "training/Adam/Sqrt_5"
      input: "training/Adam/add_15/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/truediv_5"
      op: "RealDiv"
      input: "training/Adam/mul_25"
      input: "training/Adam/add_15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_38"
      op: "ReadVariableOp"
      input: "conv1d_2/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/sub_16"
      op: "Sub"
      input: "training/Adam/ReadVariableOp_38"
      input: "training/Adam/truediv_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/AssignVariableOp_12"
      op: "AssignVariableOp"
      input: "training/Adam/m_4_1"
      input: "training/Adam/add_13"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_39"
      op: "ReadVariableOp"
      input: "training/Adam/m_4_1"
      input: "^training/Adam/AssignVariableOp_12"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/AssignVariableOp_13"
      op: "AssignVariableOp"
      input: "training/Adam/v_4_1"
      input: "training/Adam/add_14"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_40"
      op: "ReadVariableOp"
      input: "training/Adam/v_4_1"
      input: "^training/Adam/AssignVariableOp_13"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/AssignVariableOp_14"
      op: "AssignVariableOp"
      input: "conv1d_2/bias"
      input: "training/Adam/sub_16"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_41"
      op: "ReadVariableOp"
      input: "conv1d_2/bias"
      input: "^training/Adam/AssignVariableOp_14"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_42"
      op: "ReadVariableOp"
      input: "Adam/beta_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_26/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/m_5_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_26"
      op: "Mul"
      input: "training/Adam/ReadVariableOp_42"
      input: "training/Adam/mul_26/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_43"
      op: "ReadVariableOp"
      input: "Adam/beta_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/sub_17/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "training/Adam/sub_17"
      op: "Sub"
      input: "training/Adam/sub_17/x"
      input: "training/Adam/ReadVariableOp_43"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_27"
      op: "Mul"
      input: "training/Adam/sub_17"
      input: "training/Adam/gradients/conv1d_3/convolution/ExpandDims_1_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/add_16"
      op: "AddV2"
      input: "training/Adam/mul_26"
      input: "training/Adam/mul_27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_44"
      op: "ReadVariableOp"
      input: "Adam/beta_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_28/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/v_5_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_28"
      op: "Mul"
      input: "training/Adam/ReadVariableOp_44"
      input: "training/Adam/mul_28/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_45"
      op: "ReadVariableOp"
      input: "Adam/beta_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/sub_18/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "training/Adam/sub_18"
      op: "Sub"
      input: "training/Adam/sub_18/x"
      input: "training/Adam/ReadVariableOp_45"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Square_5"
      op: "Square"
      input: "training/Adam/gradients/conv1d_3/convolution/ExpandDims_1_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_29"
      op: "Mul"
      input: "training/Adam/sub_18"
      input: "training/Adam/Square_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/add_17"
      op: "AddV2"
      input: "training/Adam/mul_28"
      input: "training/Adam/mul_29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_30"
      op: "Mul"
      input: "training/Adam/mul"
      input: "training/Adam/add_16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Const_13"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/Const_14"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adam/clip_by_value_6/Minimum"
      op: "Minimum"
      input: "training/Adam/add_17"
      input: "training/Adam/Const_14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/clip_by_value_6"
      op: "Maximum"
      input: "training/Adam/clip_by_value_6/Minimum"
      input: "training/Adam/Const_13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Sqrt_6"
      op: "Sqrt"
      input: "training/Adam/clip_by_value_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/add_18/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adam/add_18"
      op: "AddV2"
      input: "training/Adam/Sqrt_6"
      input: "training/Adam/add_18/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/truediv_6"
      op: "RealDiv"
      input: "training/Adam/mul_30"
      input: "training/Adam/add_18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_46"
      op: "ReadVariableOp"
      input: "conv1d_3/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/sub_19"
      op: "Sub"
      input: "training/Adam/ReadVariableOp_46"
      input: "training/Adam/truediv_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/AssignVariableOp_15"
      op: "AssignVariableOp"
      input: "training/Adam/m_5_1"
      input: "training/Adam/add_16"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_47"
      op: "ReadVariableOp"
      input: "training/Adam/m_5_1"
      input: "^training/Adam/AssignVariableOp_15"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/AssignVariableOp_16"
      op: "AssignVariableOp"
      input: "training/Adam/v_5_1"
      input: "training/Adam/add_17"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_48"
      op: "ReadVariableOp"
      input: "training/Adam/v_5_1"
      input: "^training/Adam/AssignVariableOp_16"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/AssignVariableOp_17"
      op: "AssignVariableOp"
      input: "conv1d_3/kernel"
      input: "training/Adam/sub_19"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_49"
      op: "ReadVariableOp"
      input: "conv1d_3/kernel"
      input: "^training/Adam/AssignVariableOp_17"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_50"
      op: "ReadVariableOp"
      input: "Adam/beta_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_31/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/m_6_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_31"
      op: "Mul"
      input: "training/Adam/ReadVariableOp_50"
      input: "training/Adam/mul_31/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_51"
      op: "ReadVariableOp"
      input: "Adam/beta_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/sub_20/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "training/Adam/sub_20"
      op: "Sub"
      input: "training/Adam/sub_20/x"
      input: "training/Adam/ReadVariableOp_51"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_32"
      op: "Mul"
      input: "training/Adam/sub_20"
      input: "training/Adam/gradients/conv1d_3/Reshape_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/add_19"
      op: "AddV2"
      input: "training/Adam/mul_31"
      input: "training/Adam/mul_32"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_52"
      op: "ReadVariableOp"
      input: "Adam/beta_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_33/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/v_6_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_33"
      op: "Mul"
      input: "training/Adam/ReadVariableOp_52"
      input: "training/Adam/mul_33/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_53"
      op: "ReadVariableOp"
      input: "Adam/beta_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/sub_21/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "training/Adam/sub_21"
      op: "Sub"
      input: "training/Adam/sub_21/x"
      input: "training/Adam/ReadVariableOp_53"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Square_6"
      op: "Square"
      input: "training/Adam/gradients/conv1d_3/Reshape_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_34"
      op: "Mul"
      input: "training/Adam/sub_21"
      input: "training/Adam/Square_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/add_20"
      op: "AddV2"
      input: "training/Adam/mul_33"
      input: "training/Adam/mul_34"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_35"
      op: "Mul"
      input: "training/Adam/mul"
      input: "training/Adam/add_19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Const_15"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/Const_16"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adam/clip_by_value_7/Minimum"
      op: "Minimum"
      input: "training/Adam/add_20"
      input: "training/Adam/Const_16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/clip_by_value_7"
      op: "Maximum"
      input: "training/Adam/clip_by_value_7/Minimum"
      input: "training/Adam/Const_15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Sqrt_7"
      op: "Sqrt"
      input: "training/Adam/clip_by_value_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/add_21/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adam/add_21"
      op: "AddV2"
      input: "training/Adam/Sqrt_7"
      input: "training/Adam/add_21/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/truediv_7"
      op: "RealDiv"
      input: "training/Adam/mul_35"
      input: "training/Adam/add_21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_54"
      op: "ReadVariableOp"
      input: "conv1d_3/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/sub_22"
      op: "Sub"
      input: "training/Adam/ReadVariableOp_54"
      input: "training/Adam/truediv_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/AssignVariableOp_18"
      op: "AssignVariableOp"
      input: "training/Adam/m_6_1"
      input: "training/Adam/add_19"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_55"
      op: "ReadVariableOp"
      input: "training/Adam/m_6_1"
      input: "^training/Adam/AssignVariableOp_18"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/AssignVariableOp_19"
      op: "AssignVariableOp"
      input: "training/Adam/v_6_1"
      input: "training/Adam/add_20"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_56"
      op: "ReadVariableOp"
      input: "training/Adam/v_6_1"
      input: "^training/Adam/AssignVariableOp_19"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/AssignVariableOp_20"
      op: "AssignVariableOp"
      input: "conv1d_3/bias"
      input: "training/Adam/sub_22"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_57"
      op: "ReadVariableOp"
      input: "conv1d_3/bias"
      input: "^training/Adam/AssignVariableOp_20"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_58"
      op: "ReadVariableOp"
      input: "Adam/beta_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_36/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/m_7_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_36"
      op: "Mul"
      input: "training/Adam/ReadVariableOp_58"
      input: "training/Adam/mul_36/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_59"
      op: "ReadVariableOp"
      input: "Adam/beta_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/sub_23/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "training/Adam/sub_23"
      op: "Sub"
      input: "training/Adam/sub_23/x"
      input: "training/Adam/ReadVariableOp_59"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_37"
      op: "Mul"
      input: "training/Adam/sub_23"
      input: "training/Adam/gradients/conv1d_4/convolution/ExpandDims_1_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/add_22"
      op: "AddV2"
      input: "training/Adam/mul_36"
      input: "training/Adam/mul_37"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_60"
      op: "ReadVariableOp"
      input: "Adam/beta_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_38/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/v_7_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_38"
      op: "Mul"
      input: "training/Adam/ReadVariableOp_60"
      input: "training/Adam/mul_38/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_61"
      op: "ReadVariableOp"
      input: "Adam/beta_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/sub_24/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "training/Adam/sub_24"
      op: "Sub"
      input: "training/Adam/sub_24/x"
      input: "training/Adam/ReadVariableOp_61"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Square_7"
      op: "Square"
      input: "training/Adam/gradients/conv1d_4/convolution/ExpandDims_1_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_39"
      op: "Mul"
      input: "training/Adam/sub_24"
      input: "training/Adam/Square_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/add_23"
      op: "AddV2"
      input: "training/Adam/mul_38"
      input: "training/Adam/mul_39"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_40"
      op: "Mul"
      input: "training/Adam/mul"
      input: "training/Adam/add_22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Const_17"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/Const_18"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adam/clip_by_value_8/Minimum"
      op: "Minimum"
      input: "training/Adam/add_23"
      input: "training/Adam/Const_18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/clip_by_value_8"
      op: "Maximum"
      input: "training/Adam/clip_by_value_8/Minimum"
      input: "training/Adam/Const_17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Sqrt_8"
      op: "Sqrt"
      input: "training/Adam/clip_by_value_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/add_24/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adam/add_24"
      op: "AddV2"
      input: "training/Adam/Sqrt_8"
      input: "training/Adam/add_24/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/truediv_8"
      op: "RealDiv"
      input: "training/Adam/mul_40"
      input: "training/Adam/add_24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_62"
      op: "ReadVariableOp"
      input: "conv1d_4/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/sub_25"
      op: "Sub"
      input: "training/Adam/ReadVariableOp_62"
      input: "training/Adam/truediv_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/AssignVariableOp_21"
      op: "AssignVariableOp"
      input: "training/Adam/m_7_1"
      input: "training/Adam/add_22"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_63"
      op: "ReadVariableOp"
      input: "training/Adam/m_7_1"
      input: "^training/Adam/AssignVariableOp_21"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/AssignVariableOp_22"
      op: "AssignVariableOp"
      input: "training/Adam/v_7_1"
      input: "training/Adam/add_23"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_64"
      op: "ReadVariableOp"
      input: "training/Adam/v_7_1"
      input: "^training/Adam/AssignVariableOp_22"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/AssignVariableOp_23"
      op: "AssignVariableOp"
      input: "conv1d_4/kernel"
      input: "training/Adam/sub_25"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_65"
      op: "ReadVariableOp"
      input: "conv1d_4/kernel"
      input: "^training/Adam/AssignVariableOp_23"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_66"
      op: "ReadVariableOp"
      input: "Adam/beta_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_41/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/m_8_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_41"
      op: "Mul"
      input: "training/Adam/ReadVariableOp_66"
      input: "training/Adam/mul_41/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_67"
      op: "ReadVariableOp"
      input: "Adam/beta_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/sub_26/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "training/Adam/sub_26"
      op: "Sub"
      input: "training/Adam/sub_26/x"
      input: "training/Adam/ReadVariableOp_67"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_42"
      op: "Mul"
      input: "training/Adam/sub_26"
      input: "training/Adam/gradients/conv1d_4/Reshape_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/add_25"
      op: "AddV2"
      input: "training/Adam/mul_41"
      input: "training/Adam/mul_42"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_68"
      op: "ReadVariableOp"
      input: "Adam/beta_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_43/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/v_8_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_43"
      op: "Mul"
      input: "training/Adam/ReadVariableOp_68"
      input: "training/Adam/mul_43/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_69"
      op: "ReadVariableOp"
      input: "Adam/beta_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/sub_27/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "training/Adam/sub_27"
      op: "Sub"
      input: "training/Adam/sub_27/x"
      input: "training/Adam/ReadVariableOp_69"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Square_8"
      op: "Square"
      input: "training/Adam/gradients/conv1d_4/Reshape_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_44"
      op: "Mul"
      input: "training/Adam/sub_27"
      input: "training/Adam/Square_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/add_26"
      op: "AddV2"
      input: "training/Adam/mul_43"
      input: "training/Adam/mul_44"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_45"
      op: "Mul"
      input: "training/Adam/mul"
      input: "training/Adam/add_25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Const_19"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/Const_20"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adam/clip_by_value_9/Minimum"
      op: "Minimum"
      input: "training/Adam/add_26"
      input: "training/Adam/Const_20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/clip_by_value_9"
      op: "Maximum"
      input: "training/Adam/clip_by_value_9/Minimum"
      input: "training/Adam/Const_19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Sqrt_9"
      op: "Sqrt"
      input: "training/Adam/clip_by_value_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/add_27/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adam/add_27"
      op: "AddV2"
      input: "training/Adam/Sqrt_9"
      input: "training/Adam/add_27/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/truediv_9"
      op: "RealDiv"
      input: "training/Adam/mul_45"
      input: "training/Adam/add_27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_70"
      op: "ReadVariableOp"
      input: "conv1d_4/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/sub_28"
      op: "Sub"
      input: "training/Adam/ReadVariableOp_70"
      input: "training/Adam/truediv_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/AssignVariableOp_24"
      op: "AssignVariableOp"
      input: "training/Adam/m_8_1"
      input: "training/Adam/add_25"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_71"
      op: "ReadVariableOp"
      input: "training/Adam/m_8_1"
      input: "^training/Adam/AssignVariableOp_24"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/AssignVariableOp_25"
      op: "AssignVariableOp"
      input: "training/Adam/v_8_1"
      input: "training/Adam/add_26"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_72"
      op: "ReadVariableOp"
      input: "training/Adam/v_8_1"
      input: "^training/Adam/AssignVariableOp_25"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/AssignVariableOp_26"
      op: "AssignVariableOp"
      input: "conv1d_4/bias"
      input: "training/Adam/sub_28"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_73"
      op: "ReadVariableOp"
      input: "conv1d_4/bias"
      input: "^training/Adam/AssignVariableOp_26"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_74"
      op: "ReadVariableOp"
      input: "Adam/beta_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_46/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/m_9_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_46"
      op: "Mul"
      input: "training/Adam/ReadVariableOp_74"
      input: "training/Adam/mul_46/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_75"
      op: "ReadVariableOp"
      input: "Adam/beta_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/sub_29/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "training/Adam/sub_29"
      op: "Sub"
      input: "training/Adam/sub_29/x"
      input: "training/Adam/ReadVariableOp_75"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_47"
      op: "Mul"
      input: "training/Adam/sub_29"
      input: "training/Adam/gradients/dense_1/MatMul_grad/MatMul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/add_28"
      op: "AddV2"
      input: "training/Adam/mul_46"
      input: "training/Adam/mul_47"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_76"
      op: "ReadVariableOp"
      input: "Adam/beta_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_48/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/v_9_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_48"
      op: "Mul"
      input: "training/Adam/ReadVariableOp_76"
      input: "training/Adam/mul_48/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_77"
      op: "ReadVariableOp"
      input: "Adam/beta_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/sub_30/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "training/Adam/sub_30"
      op: "Sub"
      input: "training/Adam/sub_30/x"
      input: "training/Adam/ReadVariableOp_77"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Square_9"
      op: "Square"
      input: "training/Adam/gradients/dense_1/MatMul_grad/MatMul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_49"
      op: "Mul"
      input: "training/Adam/sub_30"
      input: "training/Adam/Square_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/add_29"
      op: "AddV2"
      input: "training/Adam/mul_48"
      input: "training/Adam/mul_49"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_50"
      op: "Mul"
      input: "training/Adam/mul"
      input: "training/Adam/add_28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Const_21"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/Const_22"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adam/clip_by_value_10/Minimum"
      op: "Minimum"
      input: "training/Adam/add_29"
      input: "training/Adam/Const_22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/clip_by_value_10"
      op: "Maximum"
      input: "training/Adam/clip_by_value_10/Minimum"
      input: "training/Adam/Const_21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Sqrt_10"
      op: "Sqrt"
      input: "training/Adam/clip_by_value_10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/add_30/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adam/add_30"
      op: "AddV2"
      input: "training/Adam/Sqrt_10"
      input: "training/Adam/add_30/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/truediv_10"
      op: "RealDiv"
      input: "training/Adam/mul_50"
      input: "training/Adam/add_30"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_78"
      op: "ReadVariableOp"
      input: "dense_1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/sub_31"
      op: "Sub"
      input: "training/Adam/ReadVariableOp_78"
      input: "training/Adam/truediv_10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/AssignVariableOp_27"
      op: "AssignVariableOp"
      input: "training/Adam/m_9_1"
      input: "training/Adam/add_28"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_79"
      op: "ReadVariableOp"
      input: "training/Adam/m_9_1"
      input: "^training/Adam/AssignVariableOp_27"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/AssignVariableOp_28"
      op: "AssignVariableOp"
      input: "training/Adam/v_9_1"
      input: "training/Adam/add_29"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_80"
      op: "ReadVariableOp"
      input: "training/Adam/v_9_1"
      input: "^training/Adam/AssignVariableOp_28"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/AssignVariableOp_29"
      op: "AssignVariableOp"
      input: "dense_1/kernel"
      input: "training/Adam/sub_31"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_81"
      op: "ReadVariableOp"
      input: "dense_1/kernel"
      input: "^training/Adam/AssignVariableOp_29"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_82"
      op: "ReadVariableOp"
      input: "Adam/beta_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_51/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/m_10_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_51"
      op: "Mul"
      input: "training/Adam/ReadVariableOp_82"
      input: "training/Adam/mul_51/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_83"
      op: "ReadVariableOp"
      input: "Adam/beta_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/sub_32/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "training/Adam/sub_32"
      op: "Sub"
      input: "training/Adam/sub_32/x"
      input: "training/Adam/ReadVariableOp_83"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_52"
      op: "Mul"
      input: "training/Adam/sub_32"
      input: "training/Adam/gradients/dense_1/BiasAdd_grad/BiasAddGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/add_31"
      op: "AddV2"
      input: "training/Adam/mul_51"
      input: "training/Adam/mul_52"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_84"
      op: "ReadVariableOp"
      input: "Adam/beta_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_53/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adam/v_10_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/mul_53"
      op: "Mul"
      input: "training/Adam/ReadVariableOp_84"
      input: "training/Adam/mul_53/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_85"
      op: "ReadVariableOp"
      input: "Adam/beta_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/sub_33/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "training/Adam/sub_33"
      op: "Sub"
      input: "training/Adam/sub_33/x"
      input: "training/Adam/ReadVariableOp_85"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Square_10"
      op: "Square"
      input: "training/Adam/gradients/dense_1/BiasAdd_grad/BiasAddGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_54"
      op: "Mul"
      input: "training/Adam/sub_33"
      input: "training/Adam/Square_10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/add_32"
      op: "AddV2"
      input: "training/Adam/mul_53"
      input: "training/Adam/mul_54"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/mul_55"
      op: "Mul"
      input: "training/Adam/mul"
      input: "training/Adam/add_31"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Const_23"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adam/Const_24"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adam/clip_by_value_11/Minimum"
      op: "Minimum"
      input: "training/Adam/add_32"
      input: "training/Adam/Const_24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/clip_by_value_11"
      op: "Maximum"
      input: "training/Adam/clip_by_value_11/Minimum"
      input: "training/Adam/Const_23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/Sqrt_11"
      op: "Sqrt"
      input: "training/Adam/clip_by_value_11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/add_33/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adam/add_33"
      op: "AddV2"
      input: "training/Adam/Sqrt_11"
      input: "training/Adam/add_33/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/truediv_11"
      op: "RealDiv"
      input: "training/Adam/mul_55"
      input: "training/Adam/add_33"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_86"
      op: "ReadVariableOp"
      input: "dense_1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/sub_34"
      op: "Sub"
      input: "training/Adam/ReadVariableOp_86"
      input: "training/Adam/truediv_11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adam/AssignVariableOp_30"
      op: "AssignVariableOp"
      input: "training/Adam/m_10_1"
      input: "training/Adam/add_31"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_87"
      op: "ReadVariableOp"
      input: "training/Adam/m_10_1"
      input: "^training/Adam/AssignVariableOp_30"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/AssignVariableOp_31"
      op: "AssignVariableOp"
      input: "training/Adam/v_10_1"
      input: "training/Adam/add_32"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_88"
      op: "ReadVariableOp"
      input: "training/Adam/v_10_1"
      input: "^training/Adam/AssignVariableOp_31"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/AssignVariableOp_32"
      op: "AssignVariableOp"
      input: "dense_1/bias"
      input: "training/Adam/sub_34"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adam/ReadVariableOp_89"
      op: "ReadVariableOp"
      input: "dense_1/bias"
      input: "^training/Adam/AssignVariableOp_32"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "conv1d_3/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_1"
      op: "VarIsInitializedOp"
      input: "Adam/beta_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_2"
      op: "VarIsInitializedOp"
      input: "training/Adam/m_0_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_3"
      op: "VarIsInitializedOp"
      input: "training/Adam/m_3_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_4"
      op: "VarIsInitializedOp"
      input: "training/Adam/m_7_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_5"
      op: "VarIsInitializedOp"
      input: "training/Adam/v_0_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_6"
      op: "VarIsInitializedOp"
      input: "training/Adam/vhat_1_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_7"
      op: "VarIsInitializedOp"
      input: "training/Adam/vhat_7_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_8"
      op: "VarIsInitializedOp"
      input: "conv1d_3/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_9"
      op: "VarIsInitializedOp"
      input: "training/Adam/m_2_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_10"
      op: "VarIsInitializedOp"
      input: "embedding_1/embeddings"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_11"
      op: "VarIsInitializedOp"
      input: "training/Adam/m_4_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_12"
      op: "VarIsInitializedOp"
      input: "training/Adam/vhat_4_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_13"
      op: "VarIsInitializedOp"
      input: "training/Adam/v_4_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_14"
      op: "VarIsInitializedOp"
      input: "training/Adam/vhat_6_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_15"
      op: "VarIsInitializedOp"
      input: "Adam/iterations"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_16"
      op: "VarIsInitializedOp"
      input: "training/Adam/m_5_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_17"
      op: "VarIsInitializedOp"
      input: "conv1d_2/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_18"
      op: "VarIsInitializedOp"
      input: "training/Adam/v_2_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_19"
      op: "VarIsInitializedOp"
      input: "training/Adam/vhat_5_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_20"
      op: "VarIsInitializedOp"
      input: "Adam/decay"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_21"
      op: "VarIsInitializedOp"
      input: "training/Adam/m_6_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_22"
      op: "VarIsInitializedOp"
      input: "training/Adam/v_1_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_23"
      op: "VarIsInitializedOp"
      input: "training/Adam/v_5_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_24"
      op: "VarIsInitializedOp"
      input: "training/Adam/v_10_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_25"
      op: "VarIsInitializedOp"
      input: "dense_1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_26"
      op: "VarIsInitializedOp"
      input: "Adam/beta_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_27"
      op: "VarIsInitializedOp"
      input: "training/Adam/v_6_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_28"
      op: "VarIsInitializedOp"
      input: "training/Adam/vhat_3_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_29"
      op: "VarIsInitializedOp"
      input: "training/Adam/vhat_10_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_30"
      op: "VarIsInitializedOp"
      input: "training/Adam/m_8_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_31"
      op: "VarIsInitializedOp"
      input: "training/Adam/vhat_9_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_32"
      op: "VarIsInitializedOp"
      input: "training/Adam/m_10_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_33"
      op: "VarIsInitializedOp"
      input: "training/Adam/v_8_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_34"
      op: "VarIsInitializedOp"
      input: "training/Adam/vhat_8_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_35"
      op: "VarIsInitializedOp"
      input: "conv1d_4/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_36"
      op: "VarIsInitializedOp"
      input: "dense_1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_37"
      op: "VarIsInitializedOp"
      input: "count"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_38"
      op: "VarIsInitializedOp"
      input: "total"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_39"
      op: "VarIsInitializedOp"
      input: "training/Adam/v_7_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_40"
      op: "VarIsInitializedOp"
      input: "conv1d_4/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_41"
      op: "VarIsInitializedOp"
      input: "training/Adam/v_9_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_42"
      op: "VarIsInitializedOp"
      input: "conv1d_1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_43"
      op: "VarIsInitializedOp"
      input: "training/Adam/m_1_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_44"
      op: "VarIsInitializedOp"
      input: "training/Adam/m_9_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_45"
      op: "VarIsInitializedOp"
      input: "conv1d_2/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_46"
      op: "VarIsInitializedOp"
      input: "conv1d_1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_47"
      op: "VarIsInitializedOp"
      input: "training/Adam/v_3_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_48"
      op: "VarIsInitializedOp"
      input: "training/Adam/vhat_0_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_49"
      op: "VarIsInitializedOp"
      input: "training/Adam/vhat_2_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/VarIsInitializedOp_50"
      op: "VarIsInitializedOp"
      input: "Adam/learning_rate"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/init"
      op: "NoOp"
      input: "^Adam/beta_1/Assign"
      input: "^Adam/beta_2/Assign"
      input: "^Adam/decay/Assign"
      input: "^Adam/iterations/Assign"
      input: "^Adam/learning_rate/Assign"
      input: "^conv1d_1/bias/Assign"
      input: "^conv1d_1/kernel/Assign"
      input: "^conv1d_2/bias/Assign"
      input: "^conv1d_2/kernel/Assign"
      input: "^conv1d_3/bias/Assign"
      input: "^conv1d_3/kernel/Assign"
      input: "^conv1d_4/bias/Assign"
      input: "^conv1d_4/kernel/Assign"
      input: "^count/Assign"
      input: "^dense_1/bias/Assign"
      input: "^dense_1/kernel/Assign"
      input: "^embedding_1/embeddings/Assign"
      input: "^total/Assign"
      input: "^training/Adam/m_0_1/Assign"
      input: "^training/Adam/m_10_1/Assign"
      input: "^training/Adam/m_1_1/Assign"
      input: "^training/Adam/m_2_1/Assign"
      input: "^training/Adam/m_3_1/Assign"
      input: "^training/Adam/m_4_1/Assign"
      input: "^training/Adam/m_5_1/Assign"
      input: "^training/Adam/m_6_1/Assign"
      input: "^training/Adam/m_7_1/Assign"
      input: "^training/Adam/m_8_1/Assign"
      input: "^training/Adam/m_9_1/Assign"
      input: "^training/Adam/v_0_1/Assign"
      input: "^training/Adam/v_10_1/Assign"
      input: "^training/Adam/v_1_1/Assign"
      input: "^training/Adam/v_2_1/Assign"
      input: "^training/Adam/v_3_1/Assign"
      input: "^training/Adam/v_4_1/Assign"
      input: "^training/Adam/v_5_1/Assign"
      input: "^training/Adam/v_6_1/Assign"
      input: "^training/Adam/v_7_1/Assign"
      input: "^training/Adam/v_8_1/Assign"
      input: "^training/Adam/v_9_1/Assign"
      input: "^training/Adam/vhat_0_1/Assign"
      input: "^training/Adam/vhat_10_1/Assign"
      input: "^training/Adam/vhat_1_1/Assign"
      input: "^training/Adam/vhat_2_1/Assign"
      input: "^training/Adam/vhat_3_1/Assign"
      input: "^training/Adam/vhat_4_1/Assign"
      input: "^training/Adam/vhat_5_1/Assign"
      input: "^training/Adam/vhat_6_1/Assign"
      input: "^training/Adam/vhat_7_1/Assign"
      input: "^training/Adam/vhat_8_1/Assign"
      input: "^training/Adam/vhat_9_1/Assign"
    }
    node {
      name: "training/group_deps"
      op: "NoOp"
      input: "^Mean"
      input: "^metrics/accuracy/AssignAddVariableOp"
      input: "^metrics/accuracy/AssignAddVariableOp_1"
      input: "^training/Adam/AssignAddVariableOp"
      input: "^training/Adam/AssignVariableOp"
      input: "^training/Adam/AssignVariableOp_1"
      input: "^training/Adam/AssignVariableOp_10"
      input: "^training/Adam/AssignVariableOp_11"
      input: "^training/Adam/AssignVariableOp_12"
      input: "^training/Adam/AssignVariableOp_13"
      input: "^training/Adam/AssignVariableOp_14"
      input: "^training/Adam/AssignVariableOp_15"
      input: "^training/Adam/AssignVariableOp_16"
      input: "^training/Adam/AssignVariableOp_17"
      input: "^training/Adam/AssignVariableOp_18"
      input: "^training/Adam/AssignVariableOp_19"
      input: "^training/Adam/AssignVariableOp_2"
      input: "^training/Adam/AssignVariableOp_20"
      input: "^training/Adam/AssignVariableOp_21"
      input: "^training/Adam/AssignVariableOp_22"
      input: "^training/Adam/AssignVariableOp_23"
      input: "^training/Adam/AssignVariableOp_24"
      input: "^training/Adam/AssignVariableOp_25"
      input: "^training/Adam/AssignVariableOp_26"
      input: "^training/Adam/AssignVariableOp_27"
      input: "^training/Adam/AssignVariableOp_28"
      input: "^training/Adam/AssignVariableOp_29"
      input: "^training/Adam/AssignVariableOp_3"
      input: "^training/Adam/AssignVariableOp_30"
      input: "^training/Adam/AssignVariableOp_31"
      input: "^training/Adam/AssignVariableOp_32"
      input: "^training/Adam/AssignVariableOp_4"
      input: "^training/Adam/AssignVariableOp_5"
      input: "^training/Adam/AssignVariableOp_6"
      input: "^training/Adam/AssignVariableOp_7"
      input: "^training/Adam/AssignVariableOp_8"
      input: "^training/Adam/AssignVariableOp_9"
    }
    node {
      name: "group_deps"
      op: "NoOp"
      input: "^Mean"
      input: "^metrics/accuracy/AssignAddVariableOp"
      input: "^metrics/accuracy/AssignAddVariableOp_1"
    }
    node {
      name: "Placeholder"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "AssignVariableOp"
      op: "AssignVariableOp"
      input: "total"
      input: "Placeholder"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp"
      op: "ReadVariableOp"
      input: "total"
      input: "^AssignVariableOp"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Placeholder_1"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_1"
      op: "AssignVariableOp"
      input: "count"
      input: "Placeholder_1"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "count"
      input: "^AssignVariableOp_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "group_deps_1"
      op: "NoOp"
      input: "^dense_1/Sigmoid"
    }
    node {
      name: "Placeholder_2"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_2"
      op: "AssignVariableOp"
      input: "embedding_1/embeddings"
      input: "Placeholder_2"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp_2"
      op: "ReadVariableOp"
      input: "embedding_1/embeddings"
      input: "^AssignVariableOp_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 22914
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Placeholder_3"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: -1
            }
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_3"
      op: "AssignVariableOp"
      input: "conv1d_1/kernel"
      input: "Placeholder_3"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp_3"
      op: "ReadVariableOp"
      input: "conv1d_1/kernel"
      input: "^AssignVariableOp_3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Placeholder_4"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_4"
      op: "AssignVariableOp"
      input: "conv1d_1/bias"
      input: "Placeholder_4"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp_4"
      op: "ReadVariableOp"
      input: "conv1d_1/bias"
      input: "^AssignVariableOp_4"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Placeholder_5"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: -1
            }
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_5"
      op: "AssignVariableOp"
      input: "conv1d_2/kernel"
      input: "Placeholder_5"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp_5"
      op: "ReadVariableOp"
      input: "conv1d_2/kernel"
      input: "^AssignVariableOp_5"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Placeholder_6"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_6"
      op: "AssignVariableOp"
      input: "conv1d_2/bias"
      input: "Placeholder_6"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp_6"
      op: "ReadVariableOp"
      input: "conv1d_2/bias"
      input: "^AssignVariableOp_6"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Placeholder_7"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: -1
            }
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_7"
      op: "AssignVariableOp"
      input: "conv1d_3/kernel"
      input: "Placeholder_7"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp_7"
      op: "ReadVariableOp"
      input: "conv1d_3/kernel"
      input: "^AssignVariableOp_7"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Placeholder_8"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_8"
      op: "AssignVariableOp"
      input: "conv1d_3/bias"
      input: "Placeholder_8"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp_8"
      op: "ReadVariableOp"
      input: "conv1d_3/bias"
      input: "^AssignVariableOp_8"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Placeholder_9"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: -1
            }
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_9"
      op: "AssignVariableOp"
      input: "conv1d_4/kernel"
      input: "Placeholder_9"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp_9"
      op: "ReadVariableOp"
      input: "conv1d_4/kernel"
      input: "^AssignVariableOp_9"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
              dim {
                size: 128
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Placeholder_10"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_10"
      op: "AssignVariableOp"
      input: "conv1d_4/bias"
      input: "Placeholder_10"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp_10"
      op: "ReadVariableOp"
      input: "conv1d_4/bias"
      input: "^AssignVariableOp_10"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Placeholder_11"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_11"
      op: "AssignVariableOp"
      input: "dense_1/kernel"
      input: "Placeholder_11"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp_11"
      op: "ReadVariableOp"
      input: "dense_1/kernel"
      input: "^AssignVariableOp_11"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Placeholder_12"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "AssignVariableOp_12"
      op: "AssignVariableOp"
      input: "dense_1/bias"
      input: "Placeholder_12"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "ReadVariableOp_12"
      op: "ReadVariableOp"
      input: "dense_1/bias"
      input: "^AssignVariableOp_12"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/filename/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save/filename"
      op: "PlaceholderWithDefault"
      input: "save/filename/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save/Const"
      op: "PlaceholderWithDefault"
      input: "save/filename"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save/StringJoin/inputs_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "_temp_42dd26fe575e4022b3c2091f895f41dd/part"
          }
        }
      }
    }
    node {
      name: "save/StringJoin"
      op: "StringJoin"
      input: "save/Const"
      input: "save/StringJoin/inputs_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "separator"
        value {
          s: ""
        }
      }
    }
    node {
      name: "save/num_shards"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "save/ShardedFilename/shard"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "save/ShardedFilename"
      op: "ShardedFilename"
      input: "save/StringJoin"
      input: "save/ShardedFilename/shard"
      input: "save/num_shards"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/SaveV2/tensor_names"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 51
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 51
              }
            }
            string_val: "Adam/beta_1"
            string_val: "Adam/beta_2"
            string_val: "Adam/decay"
            string_val: "Adam/iterations"
            string_val: "Adam/learning_rate"
            string_val: "conv1d_1/bias"
            string_val: "conv1d_1/kernel"
            string_val: "conv1d_2/bias"
            string_val: "conv1d_2/kernel"
            string_val: "conv1d_3/bias"
            string_val: "conv1d_3/kernel"
            string_val: "conv1d_4/bias"
            string_val: "conv1d_4/kernel"
            string_val: "count"
            string_val: "dense_1/bias"
            string_val: "dense_1/kernel"
            string_val: "embedding_1/embeddings"
            string_val: "total"
            string_val: "training/Adam/m_0_1"
            string_val: "training/Adam/m_10_1"
            string_val: "training/Adam/m_1_1"
            string_val: "training/Adam/m_2_1"
            string_val: "training/Adam/m_3_1"
            string_val: "training/Adam/m_4_1"
            string_val: "training/Adam/m_5_1"
            string_val: "training/Adam/m_6_1"
            string_val: "training/Adam/m_7_1"
            string_val: "training/Adam/m_8_1"
            string_val: "training/Adam/m_9_1"
            string_val: "training/Adam/v_0_1"
            string_val: "training/Adam/v_10_1"
            string_val: "training/Adam/v_1_1"
            string_val: "training/Adam/v_2_1"
            string_val: "training/Adam/v_3_1"
            string_val: "training/Adam/v_4_1"
            string_val: "training/Adam/v_5_1"
            string_val: "training/Adam/v_6_1"
            string_val: "training/Adam/v_7_1"
            string_val: "training/Adam/v_8_1"
            string_val: "training/Adam/v_9_1"
            string_val: "training/Adam/vhat_0_1"
            string_val: "training/Adam/vhat_10_1"
            string_val: "training/Adam/vhat_1_1"
            string_val: "training/Adam/vhat_2_1"
            string_val: "training/Adam/vhat_3_1"
            string_val: "training/Adam/vhat_4_1"
            string_val: "training/Adam/vhat_5_1"
            string_val: "training/Adam/vhat_6_1"
            string_val: "training/Adam/vhat_7_1"
            string_val: "training/Adam/vhat_8_1"
            string_val: "training/Adam/vhat_9_1"
          }
        }
      }
    }
    node {
      name: "save/SaveV2/shape_and_slices"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 51
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 51
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/SaveV2"
      op: "SaveV2"
      input: "save/ShardedFilename"
      input: "save/SaveV2/tensor_names"
      input: "save/SaveV2/shape_and_slices"
      input: "Adam/beta_1/Read/ReadVariableOp"
      input: "Adam/beta_2/Read/ReadVariableOp"
      input: "Adam/decay/Read/ReadVariableOp"
      input: "Adam/iterations/Read/ReadVariableOp"
      input: "Adam/learning_rate/Read/ReadVariableOp"
      input: "conv1d_1/bias/Read/ReadVariableOp"
      input: "conv1d_1/kernel/Read/ReadVariableOp"
      input: "conv1d_2/bias/Read/ReadVariableOp"
      input: "conv1d_2/kernel/Read/ReadVariableOp"
      input: "conv1d_3/bias/Read/ReadVariableOp"
      input: "conv1d_3/kernel/Read/ReadVariableOp"
      input: "conv1d_4/bias/Read/ReadVariableOp"
      input: "conv1d_4/kernel/Read/ReadVariableOp"
      input: "count/Read/ReadVariableOp"
      input: "dense_1/bias/Read/ReadVariableOp"
      input: "dense_1/kernel/Read/ReadVariableOp"
      input: "embedding_1/embeddings/Read/ReadVariableOp"
      input: "total/Read/ReadVariableOp"
      input: "training/Adam/m_0_1/Read/ReadVariableOp"
      input: "training/Adam/m_10_1/Read/ReadVariableOp"
      input: "training/Adam/m_1_1/Read/ReadVariableOp"
      input: "training/Adam/m_2_1/Read/ReadVariableOp"
      input: "training/Adam/m_3_1/Read/ReadVariableOp"
      input: "training/Adam/m_4_1/Read/ReadVariableOp"
      input: "training/Adam/m_5_1/Read/ReadVariableOp"
      input: "training/Adam/m_6_1/Read/ReadVariableOp"
      input: "training/Adam/m_7_1/Read/ReadVariableOp"
      input: "training/Adam/m_8_1/Read/ReadVariableOp"
      input: "training/Adam/m_9_1/Read/ReadVariableOp"
      input: "training/Adam/v_0_1/Read/ReadVariableOp"
      input: "training/Adam/v_10_1/Read/ReadVariableOp"
      input: "training/Adam/v_1_1/Read/ReadVariableOp"
      input: "training/Adam/v_2_1/Read/ReadVariableOp"
      input: "training/Adam/v_3_1/Read/ReadVariableOp"
      input: "training/Adam/v_4_1/Read/ReadVariableOp"
      input: "training/Adam/v_5_1/Read/ReadVariableOp"
      input: "training/Adam/v_6_1/Read/ReadVariableOp"
      input: "training/Adam/v_7_1/Read/ReadVariableOp"
      input: "training/Adam/v_8_1/Read/ReadVariableOp"
      input: "training/Adam/v_9_1/Read/ReadVariableOp"
      input: "training/Adam/vhat_0_1/Read/ReadVariableOp"
      input: "training/Adam/vhat_10_1/Read/ReadVariableOp"
      input: "training/Adam/vhat_1_1/Read/ReadVariableOp"
      input: "training/Adam/vhat_2_1/Read/ReadVariableOp"
      input: "training/Adam/vhat_3_1/Read/ReadVariableOp"
      input: "training/Adam/vhat_4_1/Read/ReadVariableOp"
      input: "training/Adam/vhat_5_1/Read/ReadVariableOp"
      input: "training/Adam/vhat_6_1/Read/ReadVariableOp"
      input: "training/Adam/vhat_7_1/Read/ReadVariableOp"
      input: "training/Adam/vhat_8_1/Read/ReadVariableOp"
      input: "training/Adam/vhat_9_1/Read/ReadVariableOp"
      device: "/device:CPU:0"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_INT64
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/control_dependency"
      op: "Identity"
      input: "save/ShardedFilename"
      input: "^save/SaveV2"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save/ShardedFilename"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/MergeV2Checkpoints/checkpoint_prefixes"
      op: "Pack"
      input: "save/ShardedFilename"
      input: "^save/control_dependency"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "save/MergeV2Checkpoints"
      op: "MergeV2Checkpoints"
      input: "save/MergeV2Checkpoints/checkpoint_prefixes"
      input: "save/Const"
      device: "/device:CPU:0"
      attr {
        key: "delete_old_dirs"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Identity"
      op: "Identity"
      input: "save/Const"
      input: "^save/MergeV2Checkpoints"
      input: "^save/control_dependency"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/tensor_names"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 51
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 51
              }
            }
            string_val: "Adam/beta_1"
            string_val: "Adam/beta_2"
            string_val: "Adam/decay"
            string_val: "Adam/iterations"
            string_val: "Adam/learning_rate"
            string_val: "conv1d_1/bias"
            string_val: "conv1d_1/kernel"
            string_val: "conv1d_2/bias"
            string_val: "conv1d_2/kernel"
            string_val: "conv1d_3/bias"
            string_val: "conv1d_3/kernel"
            string_val: "conv1d_4/bias"
            string_val: "conv1d_4/kernel"
            string_val: "count"
            string_val: "dense_1/bias"
            string_val: "dense_1/kernel"
            string_val: "embedding_1/embeddings"
            string_val: "total"
            string_val: "training/Adam/m_0_1"
            string_val: "training/Adam/m_10_1"
            string_val: "training/Adam/m_1_1"
            string_val: "training/Adam/m_2_1"
            string_val: "training/Adam/m_3_1"
            string_val: "training/Adam/m_4_1"
            string_val: "training/Adam/m_5_1"
            string_val: "training/Adam/m_6_1"
            string_val: "training/Adam/m_7_1"
            string_val: "training/Adam/m_8_1"
            string_val: "training/Adam/m_9_1"
            string_val: "training/Adam/v_0_1"
            string_val: "training/Adam/v_10_1"
            string_val: "training/Adam/v_1_1"
            string_val: "training/Adam/v_2_1"
            string_val: "training/Adam/v_3_1"
            string_val: "training/Adam/v_4_1"
            string_val: "training/Adam/v_5_1"
            string_val: "training/Adam/v_6_1"
            string_val: "training/Adam/v_7_1"
            string_val: "training/Adam/v_8_1"
            string_val: "training/Adam/v_9_1"
            string_val: "training/Adam/vhat_0_1"
            string_val: "training/Adam/vhat_10_1"
            string_val: "training/Adam/vhat_1_1"
            string_val: "training/Adam/vhat_2_1"
            string_val: "training/Adam/vhat_3_1"
            string_val: "training/Adam/vhat_4_1"
            string_val: "training/Adam/vhat_5_1"
            string_val: "training/Adam/vhat_6_1"
            string_val: "training/Adam/vhat_7_1"
            string_val: "training/Adam/vhat_8_1"
            string_val: "training/Adam/vhat_9_1"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/shape_and_slices"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 51
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 51
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2/tensor_names"
      input: "save/RestoreV2/shape_and_slices"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_INT64
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Identity_1"
      op: "Identity"
      input: "save/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp"
      op: "AssignVariableOp"
      input: "Adam/beta_1"
      input: "save/Identity_1"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_2"
      op: "Identity"
      input: "save/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_1"
      op: "AssignVariableOp"
      input: "Adam/beta_2"
      input: "save/Identity_2"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_3"
      op: "Identity"
      input: "save/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_2"
      op: "AssignVariableOp"
      input: "Adam/decay"
      input: "save/Identity_3"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_4"
      op: "Identity"
      input: "save/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_3"
      op: "AssignVariableOp"
      input: "Adam/iterations"
      input: "save/Identity_4"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
    }
    node {
      name: "save/Identity_5"
      op: "Identity"
      input: "save/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_4"
      op: "AssignVariableOp"
      input: "Adam/learning_rate"
      input: "save/Identity_5"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_6"
      op: "Identity"
      input: "save/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_5"
      op: "AssignVariableOp"
      input: "conv1d_1/bias"
      input: "save/Identity_6"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_7"
      op: "Identity"
      input: "save/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_6"
      op: "AssignVariableOp"
      input: "conv1d_1/kernel"
      input: "save/Identity_7"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_8"
      op: "Identity"
      input: "save/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_7"
      op: "AssignVariableOp"
      input: "conv1d_2/bias"
      input: "save/Identity_8"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_9"
      op: "Identity"
      input: "save/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_8"
      op: "AssignVariableOp"
      input: "conv1d_2/kernel"
      input: "save/Identity_9"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_10"
      op: "Identity"
      input: "save/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_9"
      op: "AssignVariableOp"
      input: "conv1d_3/bias"
      input: "save/Identity_10"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_11"
      op: "Identity"
      input: "save/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_10"
      op: "AssignVariableOp"
      input: "conv1d_3/kernel"
      input: "save/Identity_11"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_12"
      op: "Identity"
      input: "save/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_11"
      op: "AssignVariableOp"
      input: "conv1d_4/bias"
      input: "save/Identity_12"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_13"
      op: "Identity"
      input: "save/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_12"
      op: "AssignVariableOp"
      input: "conv1d_4/kernel"
      input: "save/Identity_13"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_14"
      op: "Identity"
      input: "save/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_13"
      op: "AssignVariableOp"
      input: "count"
      input: "save/Identity_14"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_15"
      op: "Identity"
      input: "save/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_14"
      op: "AssignVariableOp"
      input: "dense_1/bias"
      input: "save/Identity_15"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_16"
      op: "Identity"
      input: "save/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_15"
      op: "AssignVariableOp"
      input: "dense_1/kernel"
      input: "save/Identity_16"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_17"
      op: "Identity"
      input: "save/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_16"
      op: "AssignVariableOp"
      input: "embedding_1/embeddings"
      input: "save/Identity_17"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_18"
      op: "Identity"
      input: "save/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_17"
      op: "AssignVariableOp"
      input: "total"
      input: "save/Identity_18"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_19"
      op: "Identity"
      input: "save/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_18"
      op: "AssignVariableOp"
      input: "training/Adam/m_0_1"
      input: "save/Identity_19"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_20"
      op: "Identity"
      input: "save/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_19"
      op: "AssignVariableOp"
      input: "training/Adam/m_10_1"
      input: "save/Identity_20"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_21"
      op: "Identity"
      input: "save/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_20"
      op: "AssignVariableOp"
      input: "training/Adam/m_1_1"
      input: "save/Identity_21"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_22"
      op: "Identity"
      input: "save/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_21"
      op: "AssignVariableOp"
      input: "training/Adam/m_2_1"
      input: "save/Identity_22"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_23"
      op: "Identity"
      input: "save/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_22"
      op: "AssignVariableOp"
      input: "training/Adam/m_3_1"
      input: "save/Identity_23"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_24"
      op: "Identity"
      input: "save/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_23"
      op: "AssignVariableOp"
      input: "training/Adam/m_4_1"
      input: "save/Identity_24"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_25"
      op: "Identity"
      input: "save/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_24"
      op: "AssignVariableOp"
      input: "training/Adam/m_5_1"
      input: "save/Identity_25"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_26"
      op: "Identity"
      input: "save/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_25"
      op: "AssignVariableOp"
      input: "training/Adam/m_6_1"
      input: "save/Identity_26"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_27"
      op: "Identity"
      input: "save/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_26"
      op: "AssignVariableOp"
      input: "training/Adam/m_7_1"
      input: "save/Identity_27"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_28"
      op: "Identity"
      input: "save/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_27"
      op: "AssignVariableOp"
      input: "training/Adam/m_8_1"
      input: "save/Identity_28"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_29"
      op: "Identity"
      input: "save/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_28"
      op: "AssignVariableOp"
      input: "training/Adam/m_9_1"
      input: "save/Identity_29"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_30"
      op: "Identity"
      input: "save/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_29"
      op: "AssignVariableOp"
      input: "training/Adam/v_0_1"
      input: "save/Identity_30"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_31"
      op: "Identity"
      input: "save/RestoreV2:30"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_30"
      op: "AssignVariableOp"
      input: "training/Adam/v_10_1"
      input: "save/Identity_31"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_32"
      op: "Identity"
      input: "save/RestoreV2:31"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_31"
      op: "AssignVariableOp"
      input: "training/Adam/v_1_1"
      input: "save/Identity_32"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_33"
      op: "Identity"
      input: "save/RestoreV2:32"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_32"
      op: "AssignVariableOp"
      input: "training/Adam/v_2_1"
      input: "save/Identity_33"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_34"
      op: "Identity"
      input: "save/RestoreV2:33"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_33"
      op: "AssignVariableOp"
      input: "training/Adam/v_3_1"
      input: "save/Identity_34"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_35"
      op: "Identity"
      input: "save/RestoreV2:34"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_34"
      op: "AssignVariableOp"
      input: "training/Adam/v_4_1"
      input: "save/Identity_35"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_36"
      op: "Identity"
      input: "save/RestoreV2:35"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_35"
      op: "AssignVariableOp"
      input: "training/Adam/v_5_1"
      input: "save/Identity_36"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_37"
      op: "Identity"
      input: "save/RestoreV2:36"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_36"
      op: "AssignVariableOp"
      input: "training/Adam/v_6_1"
      input: "save/Identity_37"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_38"
      op: "Identity"
      input: "save/RestoreV2:37"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_37"
      op: "AssignVariableOp"
      input: "training/Adam/v_7_1"
      input: "save/Identity_38"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_39"
      op: "Identity"
      input: "save/RestoreV2:38"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_38"
      op: "AssignVariableOp"
      input: "training/Adam/v_8_1"
      input: "save/Identity_39"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_40"
      op: "Identity"
      input: "save/RestoreV2:39"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_39"
      op: "AssignVariableOp"
      input: "training/Adam/v_9_1"
      input: "save/Identity_40"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_41"
      op: "Identity"
      input: "save/RestoreV2:40"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_40"
      op: "AssignVariableOp"
      input: "training/Adam/vhat_0_1"
      input: "save/Identity_41"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_42"
      op: "Identity"
      input: "save/RestoreV2:41"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_41"
      op: "AssignVariableOp"
      input: "training/Adam/vhat_10_1"
      input: "save/Identity_42"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_43"
      op: "Identity"
      input: "save/RestoreV2:42"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_42"
      op: "AssignVariableOp"
      input: "training/Adam/vhat_1_1"
      input: "save/Identity_43"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_44"
      op: "Identity"
      input: "save/RestoreV2:43"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_43"
      op: "AssignVariableOp"
      input: "training/Adam/vhat_2_1"
      input: "save/Identity_44"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_45"
      op: "Identity"
      input: "save/RestoreV2:44"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_44"
      op: "AssignVariableOp"
      input: "training/Adam/vhat_3_1"
      input: "save/Identity_45"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_46"
      op: "Identity"
      input: "save/RestoreV2:45"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_45"
      op: "AssignVariableOp"
      input: "training/Adam/vhat_4_1"
      input: "save/Identity_46"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_47"
      op: "Identity"
      input: "save/RestoreV2:46"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_46"
      op: "AssignVariableOp"
      input: "training/Adam/vhat_5_1"
      input: "save/Identity_47"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_48"
      op: "Identity"
      input: "save/RestoreV2:47"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_47"
      op: "AssignVariableOp"
      input: "training/Adam/vhat_6_1"
      input: "save/Identity_48"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_49"
      op: "Identity"
      input: "save/RestoreV2:48"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_48"
      op: "AssignVariableOp"
      input: "training/Adam/vhat_7_1"
      input: "save/Identity_49"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_50"
      op: "Identity"
      input: "save/RestoreV2:49"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_49"
      op: "AssignVariableOp"
      input: "training/Adam/vhat_8_1"
      input: "save/Identity_50"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_51"
      op: "Identity"
      input: "save/RestoreV2:50"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_50"
      op: "AssignVariableOp"
      input: "training/Adam/vhat_9_1"
      input: "save/Identity_51"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/restore_shard"
      op: "NoOp"
      input: "^save/AssignVariableOp"
      input: "^save/AssignVariableOp_1"
      input: "^save/AssignVariableOp_10"
      input: "^save/AssignVariableOp_11"
      input: "^save/AssignVariableOp_12"
      input: "^save/AssignVariableOp_13"
      input: "^save/AssignVariableOp_14"
      input: "^save/AssignVariableOp_15"
      input: "^save/AssignVariableOp_16"
      input: "^save/AssignVariableOp_17"
      input: "^save/AssignVariableOp_18"
      input: "^save/AssignVariableOp_19"
      input: "^save/AssignVariableOp_2"
      input: "^save/AssignVariableOp_20"
      input: "^save/AssignVariableOp_21"
      input: "^save/AssignVariableOp_22"
      input: "^save/AssignVariableOp_23"
      input: "^save/AssignVariableOp_24"
      input: "^save/AssignVariableOp_25"
      input: "^save/AssignVariableOp_26"
      input: "^save/AssignVariableOp_27"
      input: "^save/AssignVariableOp_28"
      input: "^save/AssignVariableOp_29"
      input: "^save/AssignVariableOp_3"
      input: "^save/AssignVariableOp_30"
      input: "^save/AssignVariableOp_31"
      input: "^save/AssignVariableOp_32"
      input: "^save/AssignVariableOp_33"
      input: "^save/AssignVariableOp_34"
      input: "^save/AssignVariableOp_35"
      input: "^save/AssignVariableOp_36"
      input: "^save/AssignVariableOp_37"
      input: "^save/AssignVariableOp_38"
      input: "^save/AssignVariableOp_39"
      input: "^save/AssignVariableOp_4"
      input: "^save/AssignVariableOp_40"
      input: "^save/AssignVariableOp_41"
      input: "^save/AssignVariableOp_42"
      input: "^save/AssignVariableOp_43"
      input: "^save/AssignVariableOp_44"
      input: "^save/AssignVariableOp_45"
      input: "^save/AssignVariableOp_46"
      input: "^save/AssignVariableOp_47"
      input: "^save/AssignVariableOp_48"
      input: "^save/AssignVariableOp_49"
      input: "^save/AssignVariableOp_5"
      input: "^save/AssignVariableOp_50"
      input: "^save/AssignVariableOp_6"
      input: "^save/AssignVariableOp_7"
      input: "^save/AssignVariableOp_8"
      input: "^save/AssignVariableOp_9"
    }
    node {
      name: "save/restore_all"
      op: "NoOp"
      input: "^save/restore_shard"
    }
    versions {
      producer: 134
    }
  }
  saver_def {
    filename_tensor_name: "save/Const:0"
    save_tensor_name: "save/Identity:0"
    restore_op_name: "save/restore_all"
    max_to_keep: 5
    sharded: true
    keep_checkpoint_every_n_hours: 10000.0
    version: V2
  }
  collection_def {
    key: "trainable_variables"
    value {
      bytes_list {
        value: "\n\030embedding_1/embeddings:0\022\035embedding_1/embeddings/Assign\032,embedding_1/embeddings/Read/ReadVariableOp:0(\0012\034embedding_1/random_uniform:08\001"
        value: "\n\021conv1d_1/kernel:0\022\026conv1d_1/kernel/Assign\032%conv1d_1/kernel/Read/ReadVariableOp:0(\0012\031conv1d_1/random_uniform:08\001"
        value: "\n\017conv1d_1/bias:0\022\024conv1d_1/bias/Assign\032#conv1d_1/bias/Read/ReadVariableOp:0(\0012\020conv1d_1/Const:08\001"
        value: "\n\021conv1d_2/kernel:0\022\026conv1d_2/kernel/Assign\032%conv1d_2/kernel/Read/ReadVariableOp:0(\0012\031conv1d_2/random_uniform:08\001"
        value: "\n\017conv1d_2/bias:0\022\024conv1d_2/bias/Assign\032#conv1d_2/bias/Read/ReadVariableOp:0(\0012\020conv1d_2/Const:08\001"
        value: "\n\021conv1d_3/kernel:0\022\026conv1d_3/kernel/Assign\032%conv1d_3/kernel/Read/ReadVariableOp:0(\0012\031conv1d_3/random_uniform:08\001"
        value: "\n\017conv1d_3/bias:0\022\024conv1d_3/bias/Assign\032#conv1d_3/bias/Read/ReadVariableOp:0(\0012\020conv1d_3/Const:08\001"
        value: "\n\021conv1d_4/kernel:0\022\026conv1d_4/kernel/Assign\032%conv1d_4/kernel/Read/ReadVariableOp:0(\0012\031conv1d_4/random_uniform:08\001"
        value: "\n\017conv1d_4/bias:0\022\024conv1d_4/bias/Assign\032#conv1d_4/bias/Read/ReadVariableOp:0(\0012\020conv1d_4/Const:08\001"
        value: "\n\020dense_1/kernel:0\022\025dense_1/kernel/Assign\032$dense_1/kernel/Read/ReadVariableOp:0(\0012\030dense_1/random_uniform:08\001"
        value: "\n\016dense_1/bias:0\022\023dense_1/bias/Assign\032\"dense_1/bias/Read/ReadVariableOp:0(\0012\017dense_1/Const:08\001"
        value: "\n\021Adam/iterations:0\022\026Adam/iterations/Assign\032%Adam/iterations/Read/ReadVariableOp:0(\0012+Adam/iterations/Initializer/initial_value:08\001"
        value: "\n\024Adam/learning_rate:0\022\031Adam/learning_rate/Assign\032(Adam/learning_rate/Read/ReadVariableOp:0(\0012.Adam/learning_rate/Initializer/initial_value:08\001"
        value: "\n\rAdam/beta_1:0\022\022Adam/beta_1/Assign\032!Adam/beta_1/Read/ReadVariableOp:0(\0012\'Adam/beta_1/Initializer/initial_value:08\001"
        value: "\n\rAdam/beta_2:0\022\022Adam/beta_2/Assign\032!Adam/beta_2/Read/ReadVariableOp:0(\0012\'Adam/beta_2/Initializer/initial_value:08\001"
        value: "\n\014Adam/decay:0\022\021Adam/decay/Assign\032 Adam/decay/Read/ReadVariableOp:0(\0012&Adam/decay/Initializer/initial_value:08\001"
        value: "\n\007total:0\022\014total/Assign\032\033total/Read/ReadVariableOp:0(\0012\007Const:08\001"
        value: "\n\007count:0\022\014count/Assign\032\033count/Read/ReadVariableOp:0(\0012\tConst_1:08\001"
        value: "\n\025training/Adam/m_0_1:0\022\032training/Adam/m_0_1/Assign\032)training/Adam/m_0_1/Read/ReadVariableOp:0(\0012\023training/Adam/m_0:08\001"
        value: "\n\025training/Adam/m_1_1:0\022\032training/Adam/m_1_1/Assign\032)training/Adam/m_1_1/Read/ReadVariableOp:0(\0012\023training/Adam/m_1:08\001"
        value: "\n\025training/Adam/m_2_1:0\022\032training/Adam/m_2_1/Assign\032)training/Adam/m_2_1/Read/ReadVariableOp:0(\0012\023training/Adam/m_2:08\001"
        value: "\n\025training/Adam/m_3_1:0\022\032training/Adam/m_3_1/Assign\032)training/Adam/m_3_1/Read/ReadVariableOp:0(\0012\023training/Adam/m_3:08\001"
        value: "\n\025training/Adam/m_4_1:0\022\032training/Adam/m_4_1/Assign\032)training/Adam/m_4_1/Read/ReadVariableOp:0(\0012\023training/Adam/m_4:08\001"
        value: "\n\025training/Adam/m_5_1:0\022\032training/Adam/m_5_1/Assign\032)training/Adam/m_5_1/Read/ReadVariableOp:0(\0012\023training/Adam/m_5:08\001"
        value: "\n\025training/Adam/m_6_1:0\022\032training/Adam/m_6_1/Assign\032)training/Adam/m_6_1/Read/ReadVariableOp:0(\0012\023training/Adam/m_6:08\001"
        value: "\n\025training/Adam/m_7_1:0\022\032training/Adam/m_7_1/Assign\032)training/Adam/m_7_1/Read/ReadVariableOp:0(\0012\023training/Adam/m_7:08\001"
        value: "\n\025training/Adam/m_8_1:0\022\032training/Adam/m_8_1/Assign\032)training/Adam/m_8_1/Read/ReadVariableOp:0(\0012\023training/Adam/m_8:08\001"
        value: "\n\025training/Adam/m_9_1:0\022\032training/Adam/m_9_1/Assign\032)training/Adam/m_9_1/Read/ReadVariableOp:0(\0012\023training/Adam/m_9:08\001"
        value: "\n\026training/Adam/m_10_1:0\022\033training/Adam/m_10_1/Assign\032*training/Adam/m_10_1/Read/ReadVariableOp:0(\0012\024training/Adam/m_10:08\001"
        value: "\n\025training/Adam/v_0_1:0\022\032training/Adam/v_0_1/Assign\032)training/Adam/v_0_1/Read/ReadVariableOp:0(\0012\023training/Adam/v_0:08\001"
        value: "\n\025training/Adam/v_1_1:0\022\032training/Adam/v_1_1/Assign\032)training/Adam/v_1_1/Read/ReadVariableOp:0(\0012\023training/Adam/v_1:08\001"
        value: "\n\025training/Adam/v_2_1:0\022\032training/Adam/v_2_1/Assign\032)training/Adam/v_2_1/Read/ReadVariableOp:0(\0012\023training/Adam/v_2:08\001"
        value: "\n\025training/Adam/v_3_1:0\022\032training/Adam/v_3_1/Assign\032)training/Adam/v_3_1/Read/ReadVariableOp:0(\0012\023training/Adam/v_3:08\001"
        value: "\n\025training/Adam/v_4_1:0\022\032training/Adam/v_4_1/Assign\032)training/Adam/v_4_1/Read/ReadVariableOp:0(\0012\023training/Adam/v_4:08\001"
        value: "\n\025training/Adam/v_5_1:0\022\032training/Adam/v_5_1/Assign\032)training/Adam/v_5_1/Read/ReadVariableOp:0(\0012\023training/Adam/v_5:08\001"
        value: "\n\025training/Adam/v_6_1:0\022\032training/Adam/v_6_1/Assign\032)training/Adam/v_6_1/Read/ReadVariableOp:0(\0012\023training/Adam/v_6:08\001"
        value: "\n\025training/Adam/v_7_1:0\022\032training/Adam/v_7_1/Assign\032)training/Adam/v_7_1/Read/ReadVariableOp:0(\0012\023training/Adam/v_7:08\001"
        value: "\n\025training/Adam/v_8_1:0\022\032training/Adam/v_8_1/Assign\032)training/Adam/v_8_1/Read/ReadVariableOp:0(\0012\023training/Adam/v_8:08\001"
        value: "\n\025training/Adam/v_9_1:0\022\032training/Adam/v_9_1/Assign\032)training/Adam/v_9_1/Read/ReadVariableOp:0(\0012\023training/Adam/v_9:08\001"
        value: "\n\026training/Adam/v_10_1:0\022\033training/Adam/v_10_1/Assign\032*training/Adam/v_10_1/Read/ReadVariableOp:0(\0012\024training/Adam/v_10:08\001"
        value: "\n\030training/Adam/vhat_0_1:0\022\035training/Adam/vhat_0_1/Assign\032,training/Adam/vhat_0_1/Read/ReadVariableOp:0(\0012\026training/Adam/vhat_0:08\001"
        value: "\n\030training/Adam/vhat_1_1:0\022\035training/Adam/vhat_1_1/Assign\032,training/Adam/vhat_1_1/Read/ReadVariableOp:0(\0012\026training/Adam/vhat_1:08\001"
        value: "\n\030training/Adam/vhat_2_1:0\022\035training/Adam/vhat_2_1/Assign\032,training/Adam/vhat_2_1/Read/ReadVariableOp:0(\0012\026training/Adam/vhat_2:08\001"
        value: "\n\030training/Adam/vhat_3_1:0\022\035training/Adam/vhat_3_1/Assign\032,training/Adam/vhat_3_1/Read/ReadVariableOp:0(\0012\026training/Adam/vhat_3:08\001"
        value: "\n\030training/Adam/vhat_4_1:0\022\035training/Adam/vhat_4_1/Assign\032,training/Adam/vhat_4_1/Read/ReadVariableOp:0(\0012\026training/Adam/vhat_4:08\001"
        value: "\n\030training/Adam/vhat_5_1:0\022\035training/Adam/vhat_5_1/Assign\032,training/Adam/vhat_5_1/Read/ReadVariableOp:0(\0012\026training/Adam/vhat_5:08\001"
        value: "\n\030training/Adam/vhat_6_1:0\022\035training/Adam/vhat_6_1/Assign\032,training/Adam/vhat_6_1/Read/ReadVariableOp:0(\0012\026training/Adam/vhat_6:08\001"
        value: "\n\030training/Adam/vhat_7_1:0\022\035training/Adam/vhat_7_1/Assign\032,training/Adam/vhat_7_1/Read/ReadVariableOp:0(\0012\026training/Adam/vhat_7:08\001"
        value: "\n\030training/Adam/vhat_8_1:0\022\035training/Adam/vhat_8_1/Assign\032,training/Adam/vhat_8_1/Read/ReadVariableOp:0(\0012\026training/Adam/vhat_8:08\001"
        value: "\n\030training/Adam/vhat_9_1:0\022\035training/Adam/vhat_9_1/Assign\032,training/Adam/vhat_9_1/Read/ReadVariableOp:0(\0012\026training/Adam/vhat_9:08\001"
        value: "\n\031training/Adam/vhat_10_1:0\022\036training/Adam/vhat_10_1/Assign\032-training/Adam/vhat_10_1/Read/ReadVariableOp:0(\0012\027training/Adam/vhat_10:08\001"
      }
    }
  }
  collection_def {
    key: "variables"
    value {
      bytes_list {
        value: "\n\030embedding_1/embeddings:0\022\035embedding_1/embeddings/Assign\032,embedding_1/embeddings/Read/ReadVariableOp:0(\0012\034embedding_1/random_uniform:08\001"
        value: "\n\021conv1d_1/kernel:0\022\026conv1d_1/kernel/Assign\032%conv1d_1/kernel/Read/ReadVariableOp:0(\0012\031conv1d_1/random_uniform:08\001"
        value: "\n\017conv1d_1/bias:0\022\024conv1d_1/bias/Assign\032#conv1d_1/bias/Read/ReadVariableOp:0(\0012\020conv1d_1/Const:08\001"
        value: "\n\021conv1d_2/kernel:0\022\026conv1d_2/kernel/Assign\032%conv1d_2/kernel/Read/ReadVariableOp:0(\0012\031conv1d_2/random_uniform:08\001"
        value: "\n\017conv1d_2/bias:0\022\024conv1d_2/bias/Assign\032#conv1d_2/bias/Read/ReadVariableOp:0(\0012\020conv1d_2/Const:08\001"
        value: "\n\021conv1d_3/kernel:0\022\026conv1d_3/kernel/Assign\032%conv1d_3/kernel/Read/ReadVariableOp:0(\0012\031conv1d_3/random_uniform:08\001"
        value: "\n\017conv1d_3/bias:0\022\024conv1d_3/bias/Assign\032#conv1d_3/bias/Read/ReadVariableOp:0(\0012\020conv1d_3/Const:08\001"
        value: "\n\021conv1d_4/kernel:0\022\026conv1d_4/kernel/Assign\032%conv1d_4/kernel/Read/ReadVariableOp:0(\0012\031conv1d_4/random_uniform:08\001"
        value: "\n\017conv1d_4/bias:0\022\024conv1d_4/bias/Assign\032#conv1d_4/bias/Read/ReadVariableOp:0(\0012\020conv1d_4/Const:08\001"
        value: "\n\020dense_1/kernel:0\022\025dense_1/kernel/Assign\032$dense_1/kernel/Read/ReadVariableOp:0(\0012\030dense_1/random_uniform:08\001"
        value: "\n\016dense_1/bias:0\022\023dense_1/bias/Assign\032\"dense_1/bias/Read/ReadVariableOp:0(\0012\017dense_1/Const:08\001"
        value: "\n\021Adam/iterations:0\022\026Adam/iterations/Assign\032%Adam/iterations/Read/ReadVariableOp:0(\0012+Adam/iterations/Initializer/initial_value:08\001"
        value: "\n\024Adam/learning_rate:0\022\031Adam/learning_rate/Assign\032(Adam/learning_rate/Read/ReadVariableOp:0(\0012.Adam/learning_rate/Initializer/initial_value:08\001"
        value: "\n\rAdam/beta_1:0\022\022Adam/beta_1/Assign\032!Adam/beta_1/Read/ReadVariableOp:0(\0012\'Adam/beta_1/Initializer/initial_value:08\001"
        value: "\n\rAdam/beta_2:0\022\022Adam/beta_2/Assign\032!Adam/beta_2/Read/ReadVariableOp:0(\0012\'Adam/beta_2/Initializer/initial_value:08\001"
        value: "\n\014Adam/decay:0\022\021Adam/decay/Assign\032 Adam/decay/Read/ReadVariableOp:0(\0012&Adam/decay/Initializer/initial_value:08\001"
        value: "\n\007total:0\022\014total/Assign\032\033total/Read/ReadVariableOp:0(\0012\007Const:08\001"
        value: "\n\007count:0\022\014count/Assign\032\033count/Read/ReadVariableOp:0(\0012\tConst_1:08\001"
        value: "\n\025training/Adam/m_0_1:0\022\032training/Adam/m_0_1/Assign\032)training/Adam/m_0_1/Read/ReadVariableOp:0(\0012\023training/Adam/m_0:08\001"
        value: "\n\025training/Adam/m_1_1:0\022\032training/Adam/m_1_1/Assign\032)training/Adam/m_1_1/Read/ReadVariableOp:0(\0012\023training/Adam/m_1:08\001"
        value: "\n\025training/Adam/m_2_1:0\022\032training/Adam/m_2_1/Assign\032)training/Adam/m_2_1/Read/ReadVariableOp:0(\0012\023training/Adam/m_2:08\001"
        value: "\n\025training/Adam/m_3_1:0\022\032training/Adam/m_3_1/Assign\032)training/Adam/m_3_1/Read/ReadVariableOp:0(\0012\023training/Adam/m_3:08\001"
        value: "\n\025training/Adam/m_4_1:0\022\032training/Adam/m_4_1/Assign\032)training/Adam/m_4_1/Read/ReadVariableOp:0(\0012\023training/Adam/m_4:08\001"
        value: "\n\025training/Adam/m_5_1:0\022\032training/Adam/m_5_1/Assign\032)training/Adam/m_5_1/Read/ReadVariableOp:0(\0012\023training/Adam/m_5:08\001"
        value: "\n\025training/Adam/m_6_1:0\022\032training/Adam/m_6_1/Assign\032)training/Adam/m_6_1/Read/ReadVariableOp:0(\0012\023training/Adam/m_6:08\001"
        value: "\n\025training/Adam/m_7_1:0\022\032training/Adam/m_7_1/Assign\032)training/Adam/m_7_1/Read/ReadVariableOp:0(\0012\023training/Adam/m_7:08\001"
        value: "\n\025training/Adam/m_8_1:0\022\032training/Adam/m_8_1/Assign\032)training/Adam/m_8_1/Read/ReadVariableOp:0(\0012\023training/Adam/m_8:08\001"
        value: "\n\025training/Adam/m_9_1:0\022\032training/Adam/m_9_1/Assign\032)training/Adam/m_9_1/Read/ReadVariableOp:0(\0012\023training/Adam/m_9:08\001"
        value: "\n\026training/Adam/m_10_1:0\022\033training/Adam/m_10_1/Assign\032*training/Adam/m_10_1/Read/ReadVariableOp:0(\0012\024training/Adam/m_10:08\001"
        value: "\n\025training/Adam/v_0_1:0\022\032training/Adam/v_0_1/Assign\032)training/Adam/v_0_1/Read/ReadVariableOp:0(\0012\023training/Adam/v_0:08\001"
        value: "\n\025training/Adam/v_1_1:0\022\032training/Adam/v_1_1/Assign\032)training/Adam/v_1_1/Read/ReadVariableOp:0(\0012\023training/Adam/v_1:08\001"
        value: "\n\025training/Adam/v_2_1:0\022\032training/Adam/v_2_1/Assign\032)training/Adam/v_2_1/Read/ReadVariableOp:0(\0012\023training/Adam/v_2:08\001"
        value: "\n\025training/Adam/v_3_1:0\022\032training/Adam/v_3_1/Assign\032)training/Adam/v_3_1/Read/ReadVariableOp:0(\0012\023training/Adam/v_3:08\001"
        value: "\n\025training/Adam/v_4_1:0\022\032training/Adam/v_4_1/Assign\032)training/Adam/v_4_1/Read/ReadVariableOp:0(\0012\023training/Adam/v_4:08\001"
        value: "\n\025training/Adam/v_5_1:0\022\032training/Adam/v_5_1/Assign\032)training/Adam/v_5_1/Read/ReadVariableOp:0(\0012\023training/Adam/v_5:08\001"
        value: "\n\025training/Adam/v_6_1:0\022\032training/Adam/v_6_1/Assign\032)training/Adam/v_6_1/Read/ReadVariableOp:0(\0012\023training/Adam/v_6:08\001"
        value: "\n\025training/Adam/v_7_1:0\022\032training/Adam/v_7_1/Assign\032)training/Adam/v_7_1/Read/ReadVariableOp:0(\0012\023training/Adam/v_7:08\001"
        value: "\n\025training/Adam/v_8_1:0\022\032training/Adam/v_8_1/Assign\032)training/Adam/v_8_1/Read/ReadVariableOp:0(\0012\023training/Adam/v_8:08\001"
        value: "\n\025training/Adam/v_9_1:0\022\032training/Adam/v_9_1/Assign\032)training/Adam/v_9_1/Read/ReadVariableOp:0(\0012\023training/Adam/v_9:08\001"
        value: "\n\026training/Adam/v_10_1:0\022\033training/Adam/v_10_1/Assign\032*training/Adam/v_10_1/Read/ReadVariableOp:0(\0012\024training/Adam/v_10:08\001"
        value: "\n\030training/Adam/vhat_0_1:0\022\035training/Adam/vhat_0_1/Assign\032,training/Adam/vhat_0_1/Read/ReadVariableOp:0(\0012\026training/Adam/vhat_0:08\001"
        value: "\n\030training/Adam/vhat_1_1:0\022\035training/Adam/vhat_1_1/Assign\032,training/Adam/vhat_1_1/Read/ReadVariableOp:0(\0012\026training/Adam/vhat_1:08\001"
        value: "\n\030training/Adam/vhat_2_1:0\022\035training/Adam/vhat_2_1/Assign\032,training/Adam/vhat_2_1/Read/ReadVariableOp:0(\0012\026training/Adam/vhat_2:08\001"
        value: "\n\030training/Adam/vhat_3_1:0\022\035training/Adam/vhat_3_1/Assign\032,training/Adam/vhat_3_1/Read/ReadVariableOp:0(\0012\026training/Adam/vhat_3:08\001"
        value: "\n\030training/Adam/vhat_4_1:0\022\035training/Adam/vhat_4_1/Assign\032,training/Adam/vhat_4_1/Read/ReadVariableOp:0(\0012\026training/Adam/vhat_4:08\001"
        value: "\n\030training/Adam/vhat_5_1:0\022\035training/Adam/vhat_5_1/Assign\032,training/Adam/vhat_5_1/Read/ReadVariableOp:0(\0012\026training/Adam/vhat_5:08\001"
        value: "\n\030training/Adam/vhat_6_1:0\022\035training/Adam/vhat_6_1/Assign\032,training/Adam/vhat_6_1/Read/ReadVariableOp:0(\0012\026training/Adam/vhat_6:08\001"
        value: "\n\030training/Adam/vhat_7_1:0\022\035training/Adam/vhat_7_1/Assign\032,training/Adam/vhat_7_1/Read/ReadVariableOp:0(\0012\026training/Adam/vhat_7:08\001"
        value: "\n\030training/Adam/vhat_8_1:0\022\035training/Adam/vhat_8_1/Assign\032,training/Adam/vhat_8_1/Read/ReadVariableOp:0(\0012\026training/Adam/vhat_8:08\001"
        value: "\n\030training/Adam/vhat_9_1:0\022\035training/Adam/vhat_9_1/Assign\032,training/Adam/vhat_9_1/Read/ReadVariableOp:0(\0012\026training/Adam/vhat_9:08\001"
        value: "\n\031training/Adam/vhat_10_1:0\022\036training/Adam/vhat_10_1/Assign\032-training/Adam/vhat_10_1/Read/ReadVariableOp:0(\0012\027training/Adam/vhat_10:08\001"
      }
    }
  }
  signature_def {
    key: "prediction_signature"
    value {
      inputs {
        key: "inputX"
        value {
          name: "input_1:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 120
            }
          }
        }
      }
      outputs {
        key: "predictClass"
        value {
          name: "dense_1/Sigmoid:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 6
            }
          }
        }
      }
      method_name: "tensorflow/serving/predict"
    }
  }
  signature_def {
    key: "serving_default"
    value {
      inputs {
        key: "inputX"
        value {
          name: "input_1:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 120
            }
          }
        }
      }
      outputs {
        key: "predictClass"
        value {
          name: "dense_1/Sigmoid:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 6
            }
          }
        }
      }
      method_name: "tensorflow/serving/predict"
    }
  }
}
